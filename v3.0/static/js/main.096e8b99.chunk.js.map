{"version":3,"sources":["App/Rule/index.js","App/Archer/artillery-diagram.js","App/Archer/attack-diagram.js","App/Archer/movement-diagram.js","App/Castle/example.js","App/Board/empty.js","App/Board/example.js","App/Knight/attack-diagram.js","App/Orientation/diagram.js","App/Attack/simultaneous1.js","App/Attack/simultaneous2.js","App/constants.js","App/Triangle/index.js","App/Triangle/default.js","App/Svg/index.js","App/Svg/default.js","App/Archer/single.js","App/Hex/index.js","App/Hex/default.js","App/SingleHex/index.js","App/Square/index.js","App/Square/default.js","App/Knight/single.js","App/Circle/index.js","App/Circle/default.js","App/Soldier/single.js","App/Soldier/attack-diagram.js","App/Attack/standoff.js","App/Orientation/valid.js","App/Attack/vulnerable.js","App/Rules/rules.js","App/Rules/index.js","App/Rules/styles.js","App/Castle/index.js","App/Town/index.js","App/Village/index.js","App/Archer/index.js","App/Knight/index.js","App/Soldier/index.js","App/HexUnits/index.js","App/Board/index.js","App/Board/play.js","App/Play/index.js","App/Play/styles.js","App/Router/routes.js","App/Router/index.js","App/index.js","index.js"],"names":["Rule","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderTitle","title","react_default","a","createElement","className","onClick","handleClickTitle","state","isExpanded","renderText","text","split","map","line","index","key","renderBullets","items","bullets","bullet","child","React","isValidElement","event","stopPropagation","setState","initialIsExpanded","undefined","_this$props","Component","ArcherArtilleryDiagram","style","height","src","alt","ArcherAttackDiagram","ArcherMovementDiagram","maxWidth","CastleExample","EmptyBoardDiagram","ExampleBoardDiagram","KnightAttackDiagram","OrientationDiagram","SimultaneousAttack1","SimultaneousAttack2","typeToFillMap","_typeToFillMap","defineProperty","colorToFillAndStrokeMap","black","fill","stroke","white","toRad","deg","Math","PI","COS_60","cos","SIN_60","sin","SIN_90","Triangle","tan","_ref","radius","strokeWidth","x","y","adjacent","opposite","points","point","concat","join","defaultStyle","DefaultTriangle","App_Triangle","Svg","children","viewBox","DefaultSvg","App_Svg","Archer","Svg_default","Triangle_default","ADJACENT","OPPOSITE","VERTICES","Hex","DefaultHex","App_Hex","SingleHex","hexProps","Hex_default","Square","side","DefaultSquare","App_Square","SingleKnight","Square_default","Circle","r","cx","cy","DefaultCircle","App_Circle","SingleSoldier","Circle_default","SoldierAttackDiagram","SoldierStandoffDiagram","ValidOrientations","VulnerableSoldier","rules","diagram","valid","Soldier_single","Soldier_attack_diagram","single","attack_diagram","artillery_diagram","movement_diagram","Knight_single","Knight_attack_diagram","example","App_SingleHex","empty","Board_example","standoff","vulnerable","simultaneous1","simultaneous2","Rules","renderRules","rule","App_Rule","assign","withStyles","@global","html, body","backgroundColor","fontFamily","body","margin","padding","h1","p","ul","listStyle","paddingLeft","li",".title","cursor","background","Castle","Town","Village","color","fillAndStroke","Knight","Soldier","HexUnits","units","length","unit","type","App_Soldier","App_Archer","App_Knight","HEX_RADIUS","HORZ_RADIUS","OPP","HEX_STROKE_WIDTH","Board","renderHexes","hexes","hex","file","charCodeAt","rank","Fragment","App_Castle","App_Town","App_Village","renderUnits","App_HexUnits","size","blackArcher","blackSoldier","whiteArcher","whiteSoldier","PlayBoard","App_Board","page","alignItems","bottom","display","justifyContent","left","position","right","top","board","flex","maxHeight","c","classes","play","routes","","App_Rules","#play","App_Play","Router","hash","App","handleHashChange","window","location","App_Router","addEventListener","ReactDOM","render","src_App","document","getElementById"],"mappings":"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AS,CACP,6DACA,gEACA,6DACA,2GAED,CACDlB,MAAO,kBACPkB,QAAS,CACP,uBACA,qBACA,wBACA,0BACA,wCACA,qCACA,sCACA,wCACA,uCACA,uCACA,2BACA,4BACA,6BAED,CACDlB,MAAO,QACPkB,QAAS,CAAC,CACRlB,MAAO,cACPU,KAAM,2GACNQ,QAAS,CACP,4FACAjB,EAAAC,EAAAC,cAAC+G,EAAD,MACA,qIACA,sEACA,gEACAjH,EAAAC,EAAAC,cAACgH,GAAD,QAED,CACDnH,MAAO,UACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAACiH,GAAD,MACA,WACA,+BACAnH,EAAAC,EAAAC,cAACkH,GAAD,MACA,qDACA,oCAED,CACDrH,MAAO,SACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAACmH,EAAD,MACA,WACA,iEACArH,EAAAC,EAAAC,cAACoH,EAAD,MACA,iIACA,wLACAtH,EAAAC,EAAAC,cAACqH,EAAD,MACA,mGACA,+BACAvH,EAAAC,EAAAC,cAACsH,EAAD,MACA,uFACA,iIAED,CACDzH,MAAO,SACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAACuH,EAAD,MACA,WACA,wDACAzH,EAAAC,EAAAC,cAACwH,EAAD,MACA,+CACA,oCAGH,CACD3H,MAAO,YACPU,KAAM,oIACNQ,QAAS,CACP,uEACAjB,EAAAC,EAAAC,cAACyH,EAAD,MACA,CACE5H,MAAO,UACPkB,QAAS,CACP,WACA,sBAED,CACDlB,MAAO,OACPkB,QAAS,CACP,WACA,iCAED,CACDlB,MAAO,SACPkB,QAAS,CACP,WACA,4CAIL,CACDlB,MAAO,YACPkB,QAAS,CAAC,CACRlB,MAAO,OACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAAC0H,EAAD,MACA,mBACA,gCAED,CACD7H,MAAO,iBACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAAC0H,EAAD,CAAWhC,SAAU,CAAE3C,KAAM,iBAC7B,uCACA,0CAED,CACDlD,MAAO,qBACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAAC0H,EAAD,CAAWhC,SAAU,CAAE3C,KAAM,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","file":"static/js/main.096e8b99.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Rule extends Component {\n  constructor(props) {\n    super(props);\n    const { initialIsExpanded } = this.props;\n    this.state = {\n      isExpanded: initialIsExpanded === undefined ? true : initialIsExpanded,\n    }\n  }\n\n  render() {\n  \tconst { bullets, text, title } = this.props;\n    return (\n      <div>\n\t\t\t\t{title && this.renderTitle()}\n\t\t\t\t{text && this.renderText()}\n\t\t\t\t{bullets && this.renderBullets()}\n\t\t\t</div>\n    );\n  }\n\n  renderTitle = () => {\n  \tconst { title } = this.props;\n  \treturn (\n  \t\t<h3 className=\"title\" onClick={this.handleClickTitle}>\n  \t\t  {this.state.isExpanded ? '-' : '+'}&nbsp;\n  \t\t\t{title}\n  \t\t</h3>\n\t\t);\n  }\n\n  renderText = () => {\n  \tif (!this.state.isExpanded) {\n  \t\treturn;\n  \t}\n  \tconst { text } = this.props;\n  \treturn text\n  \t\t.split('\\n')\n  \t\t.map((line, index) => <p key={index}>{line}</p>);\n  }\n\n  renderBullets = () => {\n  \tif (!this.state.isExpanded) {\n  \t\treturn;\n  \t}\n  \tconst { bullets } = this.props;\n  \tconst items = bullets.map((bullet, index) => {\n  \t\tconst child = typeof bullet === 'string' || React.isValidElement(bullet)\n  \t\t\t? bullet\n  \t\t\t: <Rule {...bullet} />;\n  \t\treturn <li key={index}>{child}</li>;\n  \t});\n  \treturn <ul>{items}</ul>\n  }\n\n  handleClickTitle = event => {\n  \tevent.stopPropagation();\n  \tthis.setState({ isExpanded: !this.state.isExpanded });\n  }\n}\n\nexport default Rule;\n","import React from 'react'\n\nconst ArcherArtilleryDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '12rem' }}\n\t\t  \tsrc='img/archer-artillery-diagram.svg'\n\t\t  \talt='archer-artillery-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default ArcherArtilleryDiagram","import React from 'react'\n\nconst ArcherAttackDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '10rem' }}\n\t\t  \tsrc='img/archer-attack-diagram.svg'\n\t\t  \talt='archer-attack-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default ArcherAttackDiagram","import React from 'react'\n\nconst ArcherMovementDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '20rem', maxWidth: '100%' }}\n\t\t  \tsrc='img/archer-movement-diagram.svg'\n\t\t  \talt='archer-movement-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default ArcherMovementDiagram","import React from 'react'\n\nconst CastleExample = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '6rem' }}\n\t\t  \tsrc='img/castle-example.svg'\n\t\t  \talt='castle-example'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default CastleExample","import React from 'react'\n\nconst EmptyBoardDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '12rem' }}\n\t\t  \tsrc='img/empty-board.svg'\n\t\t  \talt='empty-board-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default EmptyBoardDiagram","import React from 'react'\n\nconst ExampleBoardDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '12rem' }}\n\t\t  \tsrc='img/example-board.svg'\n\t\t  \talt='example-board-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default ExampleBoardDiagram","import React from 'react'\n\nconst KnightAttackDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '10rem' }}\n\t\t  \tsrc='img/knight-attack-diagram.svg'\n\t\t  \talt='knight-attack-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default KnightAttackDiagram","import React from 'react'\n\nconst OrientationDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '12rem' }}\n\t\t  \tsrc='img/orientation-diagram.svg'\n\t\t  \talt='orientation-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default OrientationDiagram","import React from 'react'\n\nconst SimultaneousAttack1 = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '10rem' }}\n\t\t  \tsrc='img/simultaneous-attack-1.svg'\n\t\t  \talt='simultaneous-attack-diagram-1'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default SimultaneousAttack1","import React from 'react'\n\nconst SimultaneousAttack2 = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '10rem' }}\n\t\t  \tsrc='img/simultaneous-attack-2.svg'\n\t\t  \talt='simultaneous-attack-diagram-2'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default SimultaneousAttack2","export const typeToFillMap = {\n\t[undefined]: 'Wheat',\n\tsea: 'DeepSkyBlue',\n\tforest: 'ForestGreen',\n\tmountain: 'Sienna',\n}\n\nexport const colorToFillAndStrokeMap = {\n\tblack: { fill: 'black', stroke: 'white' },\n\twhite: { fill: 'white', stroke: 'black' },\n}\n\nexport const toRad = deg => deg * (Math.PI / 180)\nexport const COS_30 = Math.cos(toRad(30))\nexport const COS_60 = Math.cos(toRad(60))\nexport const SIN_60 = Math.sin(toRad(60))\nexport const COS_90 = Math.cos(toRad(90))\nexport const SIN_90 = Math.sin(toRad(90))\nexport const TAN_30 = Math.tan(toRad(30))\n","import React from 'react'\n\nimport { COS_60, SIN_60 } from '../constants'\n\nconst Triangle = ({ fill, onClick, radius, stroke, strokeWidth, style, x, y }) => {\n  const adjacent = radius * COS_60\n  const opposite = radius * SIN_60\n  const vertices = [\n    [opposite, adjacent],\n    [0, -radius],\n    [-opposite, adjacent],\n  ]\n  const points = vertices\n    .map(point => `${x + point[0]},${y + point[1]}`)\n    .join(' ')\n  return (\n    <polygon\n      fill={fill}\n      onClick={onClick}\n      points={points}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n    />\n  )\n}\n\nexport default Triangle\n","import React from 'react'\n\nimport Hex from '.';\n\nconst defaultStyle = {}\n\nconst DefaultTriangle = ({ fill, radius, stroke, strokeWidth, style, x, y }) => (\n\t<Hex\n\t\tfill={fill || 'white'}\n\t\tradius={radius || 1}\n\t  stroke={stroke || \"black\"}\n\t  strokeWidth={strokeWidth || 0.1}\n\t  style={style || defaultStyle}\n\t  x={typeof x === 'number' ? x : 1.1}\n\t  y={typeof y === 'number' ? y : 1.1}\n\t/>\n);\n\nexport default DefaultTriangle;\n","import React from 'react'\n\nconst Svg = ({ children, className, style, viewBox }) => (\n\t<svg\n\t  className={className}\n\t\tstyle={style}\n\t\tviewBox={viewBox}\n\t>\n\t  {children}\n\t </svg>\n);\n\nexport default Svg;","import React from 'react'\n\nimport Svg from '.';\n\nconst defaultStyle = {\n\theight: '2rem',\n}\n\nconst DefaultSvg = ({ children }) => (\n\t<Svg\n\t  style={defaultStyle}\n\t  viewBox=\"0,0,2.2,2.2\"\n\t>\n\t  {children}\n\t</Svg>\n);\n\nexport default DefaultSvg;\n","import React from 'react'\n\nimport DefaultTriangle from '../Triangle/default';\nimport DefaultSvg from '../Svg/default';\n\nconst Archer = props => (\n  <DefaultSvg>\n    <DefaultTriangle {...props} />\n  </DefaultSvg>\n);\n\nexport default Archer;","import React from 'react'\n\nimport { COS_60, SIN_60 } from '../constants'\n\nconst RADIUS = 1\nconst ADJACENT = RADIUS * COS_60\nconst OPPOSITE = RADIUS * SIN_60\nconst VERTICES = [\n  [0, RADIUS],\n  [OPPOSITE, ADJACENT],\n  [OPPOSITE, -ADJACENT],\n  [0, -RADIUS],\n  [-OPPOSITE, -ADJACENT],\n  [-OPPOSITE, ADJACENT],\n]\n\nconst Hex = ({ fill, onClick, stroke, strokeWidth, style, x, y }) => {\n  const points = VERTICES\n    .map(point => `${x + point[0]},${y + point[1]}`)\n    .join(' ')\n  return (\n    <polygon\n      fill={fill}\n      onClick={onClick}\n      points={points}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n    />\n  )\n}\n\nexport default Hex\n","import React from 'react'\n\nimport Hex from '.';\n\nconst defaultStyle = {}\n\nconst DefaultHex = ({ fill, radius, stroke, strokeWidth, style, x, y }) => (\n\t<Hex\n\t\tfill={fill || 'wheat'}\n\t  stroke={stroke || \"hsl(0, 0%, 30%)\"}\n\t  strokeWidth={strokeWidth || 0.1}\n\t  style={style || defaultStyle}\n\t  x={typeof x === 'number' ? x : 1.1}\n\t  y={typeof y === 'number' ? y : 1.1}\n\t/>\n);\n\nexport default DefaultHex;\n","import React from 'react'\n\nimport DefaultHex from '../Hex/default';\nimport DefaultSvg from '../Svg/default';\n\nconst SingleHex = ({ hexProps }) => (\n\t<DefaultSvg>\n\t  <DefaultHex {...hexProps} />\n\t </DefaultSvg>\n);\n\nexport default SingleHex;","import React from 'react'\n\nimport { SIN_90 } from '../constants'\n\nconst Square = ({ fill, onClick, radius, stroke, strokeWidth, style, x, y }) => {\n  const side = radius * SIN_90\n  const vertices = [\n    [side, side],\n    [side, -side],\n    [-side, -side],\n    [-side, side],\n  ]\n  const points = vertices\n    .map(point => `${x + point[0]},${y + point[1]}`)\n    .join(' ')\n  return (\n    <polygon\n      fill={fill}\n      onClick={onClick}\n      points={points}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n    />\n  )\n}\n\nexport default Square\n","import React from 'react'\n\nimport Square from '.';\n\nconst defaultStyle = {}\n\nconst DefaultSquare = ({ fill, radius, stroke, strokeWidth, style, x, y }) => (\n\t<Square\n\t\tfill={fill || 'white'}\n\t\tradius={radius || 0.75}\n\t  stroke={stroke || \"black\"}\n\t  strokeWidth={strokeWidth || 0.1}\n\t  style={style || defaultStyle}\n\t  x={typeof x === 'number' ? x : 1.1}\n\t  y={typeof y === 'number' ? y : 1.1}\n\t/>\n);\n\nexport default DefaultSquare;\n","import React from 'react'\n\nimport DefaultSquare from '../Square/default';\nimport DefaultSvg from '../Svg/default';\n\nconst SingleKnight = props => (\n\t<DefaultSvg>\n\t  <DefaultSquare {...props} />\n\t </DefaultSvg>\n);\n\nexport default SingleKnight;","import React from 'react'\n\nconst Circle = ({ fill, onClick, radius, stroke, strokeWidth, style, x, y }) => {\n  return (\n    <circle\n      fill={fill}\n      onClick={onClick}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n      r={radius}\n      cx={x}\n      cy={y}\n    />\n  )\n}\n\nexport default Circle\n","import React from 'react'\n\nimport Circle from '.';\n\nconst defaultStyle = {}\n\nconst DefaultCircle = ({ fill, radius, stroke, strokeWidth, style, x, y }) => (\n\t<Circle\n\t\tfill={fill || 'white'}\n\t  stroke={stroke || \"black\"}\n\t  strokeWidth={strokeWidth || 0.1}\n\t  style={style || defaultStyle}\n\t  radius={typeof radius === 'number' ? radius : 0.75 }\n\t  x={typeof x === 'number' ? x : 1.1}\n\t  y={typeof y === 'number' ? y : 1.1}\n\t/>\n);\n\nexport default DefaultCircle;\n","import React from 'react'\n\nimport DefaultCircle from '../Circle/default';\nimport DefaultSvg from '../Svg/default';\n\nconst SingleSoldier = props => (\n\t<DefaultSvg>\n\t\t<DefaultCircle {...props} />\n\t</DefaultSvg>\n)\n\nexport default SingleSoldier;","import React from 'react'\n\nconst SoldierAttackDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '10rem' }}\n\t\t  \tsrc='img/soldier-attack-diagram.svg'\n\t\t  \talt='soldier-attack-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default SoldierAttackDiagram","import React from 'react'\n\nconst SoldierStandoffDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '6rem' }}\n\t\t  \tsrc='img/soldier-standoff.svg'\n\t\t  \talt='soldier-standoff-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default SoldierStandoffDiagram","import React from 'react'\n\nconst ValidOrientations = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '6rem' }}\n\t\t  \tsrc='img/valid-orientations.svg'\n\t\t  \talt='valid-orientations'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default ValidOrientations","import React from 'react'\n\nconst VulnerableSoldier = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '6rem' }}\n\t\t  \tsrc='img/vulnerable-soldier.svg'\n\t\t  \talt='vulnerable-soldier-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default VulnerableSoldier","import React from 'react'\n\nimport ArcherArtilleryDiagram from '../Archer/artillery-diagram'\nimport ArcherAttackDiagram from '../Archer/attack-diagram'\nimport ArcherMovementDiagram from '../Archer/movement-diagram'\nimport CastleExample from '../Castle/example'\nimport EmptyBoardDiagram from '../Board/empty'\nimport ExampleBoardDiagram from '../Board/example'\nimport KnightAttackDiagram from '../Knight/attack-diagram'\nimport OrientationDiagram from '../Orientation/diagram'\nimport SimultaneousAttack1 from '../Attack/simultaneous1'\nimport SimultaneousAttack2 from '../Attack/simultaneous2'\nimport SingleArcher from '../Archer/single'\nimport SingleHex from '../SingleHex'\nimport SingleKnight from '../Knight/single'\nimport SingleSoldier from '../Soldier/single'\nimport SoldierAttackDiagram from '../Soldier/attack-diagram'\nimport SoldierStandoff from '../Attack/standoff'\nimport ValidOrientations from '../Orientation/valid'\nimport VulnerableSoldier from '../Attack/vulnerable'\n\nexport default [{\n  title: 'Object of the Game',\n  bullets: [\n    'Collect resources, grow your army, vanquish your opponents',\n    'The game ends immediately when the last resource is collected',\n    'The winner is the player with the highest score at the end',\n    'Scores are calculated as the sum of the values of all units remaining on the board plus unspent silver'\n  ],\n}, {\n  title: 'Game Components',\n  bullets: [\n    '48 wooden land hexes',\n    '9 wooden sea hexes',\n    '9 wooden forest hexes',\n    '9 wooden mountain hexes',\n    '3 wooden village pieces of each color',\n    '2 wooden town pieces of each color',\n    '1 wooden castle piece of each color',\n    '9 wooden soldier pieces of each color',\n    '6 wooden archer pieces of each color',\n    '3 wooden knight pieces of each color',\n    '16 small 1-silver tokens',\n    '16 medium 2-silver tokens',\n    '16 large 3-silver tokens',\n  ],\n}, {\n  title: 'Units',\n  bullets: [{\n    title: 'Orientation',\n    text: 'Each unit on the battleboard at all times has an orientation. This is the direction that unit is facing.',\n    bullets: [\n      'Visually, orientation is denoted by a small orientation triangle next to the unit symbol:',\n      <OrientationDiagram />,\n      'Textually, orientation is denoted by the \">\" character followed by the coordinates of the adjacent hex that unit is facing towards',\n      'For example, in the diagram above: Sb2>c2 (soldier at b2 facing c2)',\n      'Orientations always face towards the center of adjacent hexes',\n      <ValidOrientations />,\n    ],\n  }, {\n    title: 'Soldier',\n    bullets: [\n      <SingleSoldier />,\n      'Value: 1',\n      'Attack: Forward adjacent hex',\n      <SoldierAttackDiagram />,\n      'Defend: Forward (adjacent melee and ranged arrows)',\n      'Movement: 3 hexes any direction',\n    ],\n  }, {\n    title: 'Archer',\n    bullets: [\n      <SingleArcher />,\n      'Value: 2',\n      'Attack: Forward up to 2 hex range (adjacent hex is range zero)',\n      <ArcherAttackDiagram />,\n      'Archers can attack opponent units behind other opponent units (if that unit is not oriented to protect itself with its shield)',\n      'For example, in the following diagram the white a2 archer can attack the black c2 knight but it can not attack the black b2 soldier because it is facing its shield toward the archer',\n      <ArcherArtilleryDiagram />,\n      'Defend: None. Archers do not carry a shield and are thus vulnerable to attack from any direction',\n      'Movement: 2 hexes diagonally',\n      <ArcherMovementDiagram />,\n      'For example, an archer located at c3 has valid moves: a2, b1, b4, d2, d5, e4, e7, g5',\n      'Note that orientation does not affect valid moves but an Archer can only attack in the direction of its current orientation.',\n    ],\n  }, {\n    title: 'Knight',\n    bullets: [\n      <SingleKnight />,\n      'Value: 3',\n      'Attack: Adjacent forward-left, forward, forward-right',\n      <KnightAttackDiagram />,\n      'Defend: Forward-left, forward, forward-right',\n      'Movement: 1 hex any direction',\n    ],\n  }],\n}, {\n  title: 'Buildings',\n  text: 'Buildings are visually represented in diagrams by a small symbol of the strongest unit that they produce, without an orientation.',\n  bullets: [\n    'For example in the following diagram is an archer unit and a castle:',\n    <CastleExample />,\n    {\n      title: 'Village',\n      bullets: [\n        'Value: 1',\n        'Produces soldiers'\n      ],\n    }, {\n      title: 'Town',\n      bullets: [\n        'Value: 2',\n        'Produces archers or soldiers',\n      ],\n    }, {\n      title: 'Castle',\n      bullets: [\n        'Value: 3',\n        'Produces knights, archers or soldiers',\n      ],\n    }\n  ],\n}, {\n  title: 'Hex Types',\n  bullets: [{\n    title: 'Land',\n    bullets: [\n      <SingleHex />,\n      'Default hex type',\n      'Eligible sites for building',\n    ],\n  }, {\n    title: 'Sea (resource)',\n    bullets: [\n      <SingleHex hexProps={{ fill: 'DeepSkyBlue' }} />,\n      'Provides access to fishing and trade',\n      'Produces 1 silver per resource action',\n    ],\n  }, {\n    title: 'Forrest (resource)',\n    bullets: [\n      <SingleHex hexProps={{ fill: 'ForestGreen' }} />,\n      'Provides access to hunting and lumber',\n      'Produces 2 silver per resource action',\n    ],\n  }, {\n    title: 'Mountain (resource)',\n    bullets: [\n      <SingleHex hexProps={{ fill: 'Sienna' }} />,\n      'Provides access to mining valuable minerals and ore',\n      'Produces 3 silver per resource action',\n    ],\n  }],\n}, {\n  title: 'Setup',\n  bullets: [{\n    title: 'Step 1: Build the board',\n    bullets: [\n      'For a 2 player game, construct a hexagon shaped board with a side dimension of 3 hexes like so:',\n      <EmptyBoardDiagram />,\n      'Then roll 2 dice, a white D5 and a black D5. The white die result will determine the rank and the black die will determine the file. Place resource hexes at the coordinates determined by consecutive dice rolls in the following order:',\n      '3 mountains, 3 forrest and 3 sea hexes',\n      'If a dice roll results in a hex that already has a resource, simply stack the new resource on top of the existing one',\n      'Example result:',\n      <ExampleBoardDiagram />,\n      'For a 3 or 4 player game, construct a hexagon shaped board with a side dimension of 4 hexes',\n    ],\n  }, {\n    title: 'Step 2: Placement',\n    bullets: [\n      'In turn order each player places one building and one corresponding unit together on the same hex per turn. Units correspond to buildings of equal value, ' +\n      'i.e. a soldier & village are placed together, archer and town, knight and castle.',\n      'Players must choose hexes that satisfy the following requirements:',\n      '- must not be a resource hex',\n      '- must not be occupied by opponent',\n      '- unit orientation must not threaten or be threatened by any opponent unit',\n      'Players place the following:',\n      '1 soldier & 1 village',\n      '1 archer & 1 town',\n      '1 knight & 1 castle',\n    ],\n  }],\n}, {\n  title: 'Gameplay',\n  text: 'Each player performs one action in turn and play continues until the end condition is met.',\n}, {\n  title: 'Actions',\n  bullets: [\n    'Move',\n    'Attack',\n    'Collect',\n    'Purchase',\n  ],\n}, {\n  title: 'Movement',\n  bullets: [\n    'Players may move one of their units to a different hex and/or orientation, according to the units individual movement abilities',\n    'Units may not move to an occupied hex',\n    'Units may not move through opponent occupied hexes',\n    'Units may move through self occupied hexes',\n    'Units may occupy an opponent building if unoccupied (this also blocks opponent production at that building)',\n    'Only one unit may occupy any given hex at any time',\n  ],\n}, {\n  title: 'Attack',\n  text: 'Players may attack an opponent unit with one or more of their own units.',\n  bullets: [\n    'Attacked units are captured and removed from the board',\n    'The attacking unit does not move to occupy the hex of the captured unit',\n    'Attacks are denoted with an \"x\" followed by the coordinate of the attacked unit. There is no need to specify the attacking unit, since multiple units may simultaneously attack the same opponent unit.',\n    {\n      title: 'Shields',\n      bullets: [\n        'Soldiers and knights are equipped with shields that can block attacks from the same hexes they are able to attack.',\n        'Players may not attack opponent units equipped with shields from these directions. They must maneuver to attack from the side or behind or attack with multiple units simultaneously.',\n        'For example, in the following diagram two soldiers are facing each other. The soldier attacks and defends the adjacent hex to its orientation. Thus these two soldiers can not attack each other and are effectively in a standoff, much like pawns in Chess.',\n        <SoldierStandoff />,\n        \"However, if the attacked unit is not oriented to defend itself then it is vulnerable to attack. In the following diagram, the black soldier is now oriented away from the attacking white soldier. If it is white's turn to play, the black soldier may be captured.\",\n        <VulnerableSoldier />,\n      ],\n    }, {\n      title: 'Double Attack',\n      bullets: [\n        'If multiple units are oriented to attack the same hex then the defending unit can use its shield to block only one attack, resulting in the defending unit being captured.',\n        'For example, in the following diagram the black knight is able to defend against the attacking white soldier. Remember that the knight attacks and defends the forward hex as well as left-forward and right-forward hexes.',\n        <SimultaneousAttack1 />,\n        'However if white moves another unit in to attack then black will not be able to defend both attacks and will be captured',\n        <SimultaneousAttack2 />,\n      ],\n    }\n  ],\n}, {\n  title: 'Collect',\n  text: 'As an action, players may collect a resource hex they currently occupy. The resource hex is removed from the board and the player collects the corresponding amount of silver:',\n  bullets: [\n    'Sea hexes produce 1 silver',\n    'Forrest hexes produce 2 silver',\n    'Mountain hexes produce 3 silver',\n  ],\n}, {\n  title: 'Purchase',\n  text: 'As an action, players may spend silver to purchase new units and immediately place them according to the following:',\n  bullets: [\n    'New units can only be placed in buildings of your own color',\n    'New units can only be placed in unoccupied buildings',\n    'Knights can only be placed in castles',\n    'Archers can be placed in castles or towns',\n    'Soldiers can be placed in any building type',\n    'There is no limit to how much silver can be spent, provided those units can be placed in eligible buildings',\n  ],\n// }, {\n//   title: 'Play',\n//   bullets: [<a href='#play'>Play</a>],\n}];\n\n","import React, { Component } from 'react';\nimport withStyles from 'react-jss'\n\nimport Rule from '../Rule';\nimport rules from './rules';\nimport styles from './styles'\n\nclass Rules extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <h1>VigTavl ⚔ v3.0</h1>\n          <p>A turn-based strategy game of medieval combat.</p>\n          <p>Author: robcmills</p>\n          <p>2 to 4 players | 11+ | 45 - 60 minutes</p>\n        </div>\n        {this.renderRules()}\n      </div>\n    );\n  }\n\n  renderRules = () => {\n    return rules.map((rule, index) => <Rule {...rule} key={index} />);\n  }\n}\n\nexport default withStyles(styles)(Rules);\n","export default {\n\t'@global': {\n\t\t'html, body': {\n\t\t  backgroundColor: '#e1c5a2',\n\t\t  fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n\t\t},\n\t\t'body': {\n\t\t  margin: '0 auto',\n\t\t  maxWidth: 800,\n\t\t  padding: '1rem',\n\t\t},\n\t\t'h1': {\n\t\t  margin: 0,\n\t\t},\n\t\t'p': {\n\t\t  margin: '0.75rem 0',\n\t\t},\n\t\t'ul': {\n\t\t  listStyle: 'none',\n\t\t  margin: '0.5rem 0',\n\t\t  paddingLeft: 18,\n\t\t},\n\t\t'li': {\n\t\t  padding: '0.25rem 0',\n\t\t},\n\t\t'.title': {\n\t\t  cursor: 'pointer',\n\t\t  background: '#cc9c66',\n\t\t  margin: '0.25rem 0',\n\t\t  padding: '0.25rem',\n\t\t},\n\t},\n}","import React from 'react'\n\nimport DefaultSquare from '../Square/default'\n\nconst Castle = ({ fill, onClick, stroke, strokeWidth, style, x, y }) => {\n  return (\n    <DefaultSquare\n      fill=\"wheat\"\n      onClick={onClick}\n      radius={0.45}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n      x={x}\n      y={y}\n    />\n  )\n}\n\nexport default Castle\n","import React from 'react'\n\nimport DefaultTriangle from '../Triangle/default'\n\nconst Town = ({ fill, onClick, stroke, strokeWidth, style, x, y }) => {\n  return (\n    <DefaultTriangle\n      fill=\"wheat\"\n      onClick={onClick}\n      radius={0.6}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n      x={x}\n      y={y}\n    />\n  )\n}\n\nexport default Town\n","import React from 'react'\n\nimport DefaultCircle from '../Circle/default'\n\nconst Village = ({ fill, onClick, stroke, strokeWidth, style, x, y }) => {\n  return (\n    <DefaultCircle\n      fill={fill}\n      onClick={onClick}\n      radius={0.5}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n      x={x}\n      y={y}\n    />\n  )\n}\n\nexport default Village\n","import React from 'react'\n\nimport DefaultTriangle from '../Triangle/default';\n\nimport { colorToFillAndStrokeMap } from '../constants'\n\nconst Archer = ({ color, x, y }) => {\n\tconst fillAndStroke = colorToFillAndStrokeMap[color]\n\treturn <DefaultTriangle {...fillAndStroke} radius={0.6} x={x} y={y} />\n};\n\nexport default Archer;","import React from 'react'\n\nimport DefaultSquare from '../Square/default'\n\nimport { colorToFillAndStrokeMap } from '../constants'\n\nconst Knight = ({ color, x, y }) => {\n\tconst fillAndStroke = colorToFillAndStrokeMap[color]\n\treturn <DefaultSquare {...fillAndStroke} radius={0.45} x={x} y={y} />\n}\n\nexport default Knight","import React from 'react'\n\nimport DefaultCircle from '../Circle/default';\n\nimport { colorToFillAndStrokeMap } from '../constants'\n\nconst Soldier = ({ color, radius, x, y }) => {\n\tconst fillAndStroke = colorToFillAndStrokeMap[color]\n\treturn <DefaultCircle {...fillAndStroke} radius={radius} x={x} y={y} />\n}\n\nexport default Soldier;","import React from 'react'\n\nimport Archer from '../Archer'\nimport Knight from '../Knight'\nimport Soldier from '../Soldier'\n\nconst HexUnits = ({ units, x, y }) => {\n\tif (units.length === 1) {\n\t\tconst unit = units[0];\n\t\tif (unit.type === 'soldier') {\n\t\t\treturn <Soldier color={unit.color} radius={0.5} x={x} y={y} />\n\t\t}\n\t\tif (unit.type === 'archer') {\n\t\t\treturn <Archer color={unit.color} x={x} y={y} />\n\t\t}\n\t\tif (unit.type === 'knight') {\n\t\t\treturn <Knight color={unit.color} x={x} y={y} />\n\t\t}\n\t}\n};\n\nexport default HexUnits;\n","import React, { Component } from 'react'\n\nimport { typeToFillMap, COS_60, SIN_60 } from '../constants'\nimport Svg from '../Svg'\nimport Castle from '../Castle'\nimport Town from '../Town'\nimport Village from '../Village'\nimport DefaultHex from '../Hex/default'\nimport HexUnits from '../HexUnits'\n\nconst HEX_RADIUS = 1 // vertical\nconst HORZ_RADIUS = HEX_RADIUS * SIN_60\nconst OPP = HEX_RADIUS * COS_60\nconst HEX_STROKE_WIDTH = 0.1\n\nclass Board extends Component {\n  render() {\n    const { className, size, style } = this.props\n    const originX = -HEX_STROKE_WIDTH - HORZ_RADIUS * (size - 1)\n    const height = (\n      HEX_STROKE_WIDTH * 2 +\n      HEX_RADIUS * 2 +\n      (HEX_RADIUS + OPP) * (size - 1) * 2\n    )\n    const originY = -height\n    const width = (\n      HEX_STROKE_WIDTH * 2 +\n      HORZ_RADIUS * size * 2 +\n      HORZ_RADIUS * 2 * (size - 1)\n    )\n    const viewBox = [originX, originY, width, height].join(',')\n    return (\n      <Svg className={className} style={style} viewBox={viewBox}>\n        {this.renderHexes()}\n        {this.renderUnits()}\n      </Svg>\n    )\n  }\n\n  renderHexes = () => {\n    const { hexes } = this.props\n    return hexes.map((hex, index) => {\n      const file = hex.file.charCodeAt(0) - 97\n      const rank = hex.rank - 1\n      const x = HORZ_RADIUS + file * HORZ_RADIUS * 2 - (rank * HORZ_RADIUS)\n      const y = -(HEX_RADIUS + rank * (HEX_RADIUS + OPP) + HEX_STROKE_WIDTH)\n      if (hex.type === 'castle') {\n        return (\n          <React.Fragment key={index}>\n            <DefaultHex fill={hex.color} x={x} y={y} />\n            <Castle x={x} y={y} />\n          </React.Fragment>\n        )\n      }\n      if (hex.type === 'town') {\n        return (\n          <React.Fragment key={index}>\n            <DefaultHex fill={hex.color} x={x} y={y} />\n            <Town x={x} y={y} />\n          </React.Fragment>\n        )\n      }\n      if (hex.type === 'village') {\n        return (\n          <React.Fragment key={index}>\n            <DefaultHex fill={hex.color} x={x} y={y} />\n            <Village x={x} y={y} />\n          </React.Fragment>\n        )\n      }\n      return (\n        <DefaultHex\n          fill={typeToFillMap[hex.type]}\n          key={index}\n          x={x}\n          y={y}\n        />\n      )\n    })\n  }\n\n  renderUnits = () => {\n    const { hexes } = this.props\n    return hexes.map((hex, index) => {\n      if (!hex.units) {\n        return null;\n      }\n      const file = hex.file.charCodeAt(0) - 97\n      const rank = hex.rank - 1\n      const x = HORZ_RADIUS + file * HORZ_RADIUS * 2 - (rank * HORZ_RADIUS)\n      const y = -(HEX_RADIUS + rank * (HEX_RADIUS + OPP) + HEX_STROKE_WIDTH)\n      return <HexUnits key={'u' + index} units={hex.units} x={x} y={y} />\n    })\n  }\n}\n\nexport default Board","import React from 'react'\n\nimport Board from '.'\n\nconst blackArcher = { type: 'archer', color: 'black' }\nconst blackKnight = { type: 'knight', color: 'black' }\nconst blackSoldier = { type: 'soldier', color: 'black' }\nconst whiteArcher = { type: 'archer', color: 'white' }\nconst whiteKnight = { type: 'knight', color: 'white' }\nconst whiteSoldier = { type: 'soldier', color: 'white' }\n\nconst hexes = [\n\t{ file: 'a', rank: 1, type: 'sea' },\n\t{ file: 'a', rank: 2 },\n\t{ file: 'a', rank: 3, type: 'village', color: 'black', units: [blackSoldier] },\n\t{ file: 'a', rank: 4, type: 'village', color: 'white', units: [whiteSoldier] },\n\t{ file: 'b', rank: 1 },\n\t{ file: 'b', rank: 2, type: 'castle', color: 'white', units: [whiteKnight] },\n\t{ file: 'b', rank: 3 },\n\t{ file: 'b', rank: 4, type: 'forest' },\n\t{ file: 'b', rank: 5 },\n\t{ file: 'c', rank: 1, type:'village', color: 'black', units: [blackSoldier] },\n\t{ file: 'c', rank: 2 },\n\t{ file: 'c', rank: 3 },\n\t{ file: 'c', rank: 4, type: 'village', color: 'black', units: [blackSoldier] },\n\t{ file: 'c', rank: 5 },\n\t{ file: 'c', rank: 6 },\n\t{ file: 'd', rank: 1 },\n\t{ file: 'd', rank: 2, type: 'forest' },\n\t{ file: 'd', rank: 3, type: 'village', color: 'white', units: [whiteSoldier] },\n\t{ file: 'd', rank: 4, type: 'mountain' },\n\t{ file: 'd', rank: 5, type: 'town', color: 'black', units: [blackArcher] },\n\t{ file: 'd', rank: 6, type: 'castle', color: 'black', units: [blackKnight] },\n\t{ file: 'd', rank: 7 },\n\t{ file: 'e', rank: 2, type: 'town', color: 'white', units: [whiteArcher] },\n\t{ file: 'e', rank: 3 },\n\t{ file: 'e', rank: 4 },\n\t{ file: 'e', rank: 5, type: 'town', color: 'black', units: [blackArcher] },\n\t{ file: 'e', rank: 6, type: 'sea' },\n\t{ file: 'e', rank: 7 },\n\t{ file: 'f', rank: 3 },\n\t{ file: 'f', rank: 4, type: 'town', color: 'white', units: [whiteArcher] },\n\t{ file: 'f', rank: 5 },\n\t{ file: 'f', rank: 6 },\n\t{ file: 'f', rank: 7 },\n\t{ file: 'g', rank: 4, type: 'sea' },\n\t{ file: 'g', rank: 5 },\n\t{ file: 'g', rank: 6, type: 'village', color: 'white', units: [whiteSoldier] },\n\t{ file: 'g', rank: 7 },\n]\n\nconst PlayBoard = ({ className }) => (\n\t<Board\n\t  className={className}\n\t\thexes={hexes}\n\t\tsize={4}\n\t/>\n);\n\nexport default PlayBoard;","import React from 'react'\nimport withStyles from 'react-jss'\n\nimport styles from './styles'\nimport PlayBoard from '../Board/play'\n\nconst Play = ({ classes: c }) => (\n\t<div className={c.page}>\n\t\t<PlayBoard className={c.board} />\n\t</div>\n)\n\nexport default withStyles(styles)(Play)\n","export default {\n\tpage: {\n\t\talignItems: 'center',\n\t\tbottom: 0,\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\tleft: 0,\n\t\tposition: 'fixed',\n\t\tright: 0,\n\t\ttop: 0,\n\t},\n\tboard: {\n\t\tflex: 1,\n\t\tmaxHeight: '100%',\n\t}\n}","import React from 'react'\n\nimport Rules from '../Rules'\nimport Play from '../Play'\n\nexport default {\n\t '': <Rules />,\n\t'#play': <Play />,\n}","import routes from './routes'\n\nconst Router = ({ hash }) => routes[hash]\n\nexport default Router","import React, { Component } from 'react';\n\nimport Router from './Router';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hash: window.location.hash,\n    }\n  }\n\n  render() {\n    return (\n      <Router hash={this.state.hash} />\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', this.handleHashChange)\n  }\n\n  handleHashChange = () => {\n    this.setState({ hash: window.location.hash });\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}