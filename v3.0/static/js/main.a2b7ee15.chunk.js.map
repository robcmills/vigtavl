{"version":3,"sources":["App/Rule/index.js","App/Archer/artillery-diagram.js","App/Archer/attack-diagram.js","App/Archer/movement-diagram.js","App/Castle/example.js","App/constants.js","App/Svg/index.js","App/Square/index.js","App/Square/default.js","App/Castle/index.js","App/Triangle/index.js","App/Triangle/default.js","App/Town/index.js","App/Circle/index.js","App/Circle/default.js","App/Village/index.js","App/Hex/index.js","App/Hex/default.js","App/Archer/index.js","App/Knight/index.js","App/Soldier/index.js","App/HexUnits/index.js","App/Board/index.js","App/Board/default.js","App/Board/four-player.js","App/Knight/attack-diagram.js","App/Orientation/diagram.js","App/Svg/default.js","App/Archer/single.js","App/SingleHex/index.js","App/Knight/single.js","App/Soldier/single.js","App/Soldier/attack-diagram.js","App/rules.js","App/index.js","index.js"],"names":["Rule","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderTitle","title","react_default","a","createElement","className","onClick","handleClickTitle","state","isExpanded","renderText","text","split","map","line","index","key","renderBullets","items","bullets","bullet","child","React","isValidElement","event","stopPropagation","setState","initialIsExpanded","undefined","_this$props","Component","ArcherArtilleryDiagram","style","height","src","alt","ArcherAttackDiagram","ArcherMovementDiagram","maxWidth","CastleExample","typeToFillMap","_typeToFillMap","defineProperty","colorToFillAndStrokeMap","black","fill","stroke","white","toRad","deg","Math","PI","COS_60","cos","SIN_60","sin","SIN_90","Svg","tan","_ref","children","viewBox","Square","radius","strokeWidth","x","y","side","points","point","concat","join","defaultStyle","DefaultSquare","App_Square","Castle","Square_default","Triangle","adjacent","opposite","DefaultTriangle","App_Triangle","Town","Triangle_default","Circle","r","cx","cy","DefaultCircle","App_Circle","Village","Circle_default","ADJACENT","OPPOSITE","VERTICES","Hex","DefaultHex","App_Hex","Archer","color","fillAndStroke","assign","Knight","Soldier","HexUnits","units","length","unit","type","App_Soldier","App_Archer","App_Knight","HORZ_RADIUS","OPP","Board","hexes","size","HEX_STROKE_WIDTH","App_Svg","hex","file","charCodeAt","rank","Fragment","Hex_default","App_Castle","App_Town","App_Village","App_HexUnits","DefaultBoard","App_Board","FourPlayerBoard","KnightAttackDiagram","OrientationDiagram","DefaultSvg","Svg_default","SingleHex","hexProps","SingleKnight","SingleSoldier","SoldierAttackDiagram","rules","diagram","Soldier_single","Soldier_attack_diagram","single","attack_diagram","artillery_diagram","movement_diagram","Knight_single","Knight_attack_diagram","example","App_SingleHex","Board_default","four_player","App","renderRules","rule","App_Rule","ReactDOM","render","src_App","document","getElementById"],"mappings":"8LA8DeA,qBA3Db,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAkBRQ,YAAc,WAAM,IACXC,EAAUR,EAAKD,MAAfS,MACR,OACCC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQC,QAASb,EAAKc,kBACjCd,EAAKe,MAAMC,WAAa,IAAM,IADjC,OAEER,IAxBeR,EA6BnBiB,WAAa,WACZ,GAAKjB,EAAKe,MAAMC,WAIhB,OADiBhB,EAAKD,MAAdmB,KAENC,MAAM,MACNC,IAAI,SAACC,EAAMC,GAAP,OAAiBb,EAAAC,EAAAC,cAAA,KAAGY,IAAKD,GAAQD,MApCrBrB,EAuCnBwB,cAAgB,WACf,GAAKxB,EAAKe,MAAMC,WAAhB,CADqB,IAKfS,EADczB,EAAKD,MAAjB2B,QACcN,IAAI,SAACO,EAAQL,GAClC,IAAMM,EAA0B,kBAAXD,GAAuBE,IAAMC,eAAeH,GAC9DA,EACAlB,EAAAC,EAAAC,cAACb,EAAS6B,GACb,OAAOlB,EAAAC,EAAAC,cAAA,MAAIY,IAAKD,GAAQM,KAEzB,OAAOnB,EAAAC,EAAAC,cAAA,UAAKc,KAlDMzB,EAqDnBc,iBAAmB,SAAAiB,GAClBA,EAAMC,kBACNhC,EAAKiC,SAAS,CAAEjB,YAAahB,EAAKe,MAAMC,cAvDtB,IAETkB,EAAsBlC,EAAKD,MAA3BmC,kBAFS,OAGjBlC,EAAKe,MAAQ,CACXC,gBAAkCmB,IAAtBD,GAAyCA,GAJtClC,wEAQV,IAAAoC,EACyBjC,KAAKJ,MAA9B2B,EADAU,EACAV,QAASR,EADTkB,EACSlB,KAAMV,EADf4B,EACe5B,MACtB,OACEC,EAAAC,EAAAC,cAAA,WACDH,GAASL,KAAKI,cACdW,GAAQf,KAAKc,aACbS,GAAWvB,KAAKqB,wBAfFa,cCYJC,EAZgB,WAC9B,OACC7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACE4B,MAAO,CAAEC,OAAQ,SAClBC,IAAI,mCACJC,IAAI,+BCMMC,EAZa,WAC3B,OACClC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACE4B,MAAO,CAAEC,OAAQ,SAClBC,IAAI,gCACJC,IAAI,4BCMME,EAZe,WAC7B,OACCnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACE4B,MAAO,CAAEC,OAAQ,QAASK,SAAU,QACrCJ,IAAI,kCACJC,IAAI,8BCMMI,EAZO,WACrB,OACCrC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACE4B,MAAO,CAAEC,OAAQ,QAClBC,IAAI,yBACJC,IAAI,4BCRIK,GAAaC,EAAA,GAAA/C,OAAAgD,EAAA,EAAAhD,CAAA+C,OACxBb,EAAY,SADYlC,OAAAgD,EAAA,EAAAhD,CAAA+C,EAAA,MAEpB,eAFoB/C,OAAAgD,EAAA,EAAAhD,CAAA+C,EAAA,SAGjB,eAHiB/C,OAAAgD,EAAA,EAAAhD,CAAA+C,EAAA,WAIf,UAJeA,GAObE,EAA0B,CACtCC,MAAO,CAAEC,KAAM,QAASC,OAAQ,SAChCC,MAAO,CAAEF,KAAM,QAASC,OAAQ,UAGpBE,EAAQ,SAAAC,GAAG,OAAIA,GAAOC,KAAKC,GAAK,MAEhCC,GADSF,KAAKG,IAAIL,EAAM,KACfE,KAAKG,IAAIL,EAAM,MACxBM,EAASJ,KAAKK,IAAIP,EAAM,KAExBQ,GADSN,KAAKG,IAAIL,EAAM,KACfE,KAAKK,IAAIP,EAAM,MCNtBS,GDOOP,KAAKQ,IAAIV,EAAM,KChBzB,SAAAW,GAAA,IAAGC,EAAHD,EAAGC,SAAU5B,EAAb2B,EAAa3B,MAAO6B,EAApBF,EAAoBE,QAApB,OACX3D,EAAAC,EAAAC,cAAA,OACC4B,MAAOA,EACP6B,QAASA,GAEPD,KCoBWE,EAvBA,SAAAH,GAAiE,IAA9Dd,EAA8Dc,EAA9Dd,KAAMvC,EAAwDqD,EAAxDrD,QAASyD,EAA+CJ,EAA/CI,OAAQjB,EAAuCa,EAAvCb,OAAQkB,EAA+BL,EAA/BK,YAAahC,EAAkB2B,EAAlB3B,MAAOiC,EAAWN,EAAXM,EAAGC,EAAQP,EAARO,EAChEC,EAAOJ,EAASP,EAOhBY,EANW,CACf,CAACD,EAAMA,GACP,CAACA,GAAOA,GACR,EAAEA,GAAOA,GACT,EAAEA,EAAMA,IAGPtD,IAAI,SAAAwD,GAAK,SAAAC,OAAOL,EAAII,EAAM,GAAjB,KAAAC,OAAuBJ,EAAIG,EAAM,MAC1CE,KAAK,KACR,OACErE,EAAAC,EAAAC,cAAA,WACEyC,KAAMA,EACNvC,QAASA,EACT8D,OAAQA,EACRtB,OAAQA,EACRkB,YAAaA,EACbhC,MAAOA,KClBPwC,EAAe,GAcNC,EAZO,SAAAd,GAAA,IAAGd,EAAHc,EAAGd,KAAMkB,EAATJ,EAASI,OAAQjB,EAAjBa,EAAiBb,OAAQkB,EAAzBL,EAAyBK,YAAahC,EAAtC2B,EAAsC3B,MAAOiC,EAA7CN,EAA6CM,EAAGC,EAAhDP,EAAgDO,EAAhD,OACrBhE,EAAAC,EAAAC,cAACsE,EAAD,CACC7B,KAAMA,GAAQ,QACdkB,OAAQA,GAAU,IACjBjB,OAAQA,GAAU,QAClBkB,YAAaA,GAAe,GAC5BhC,MAAOA,GAASwC,EAChBP,EAAgB,kBAANA,EAAiBA,EAAI,IAC/BC,EAAgB,kBAANA,EAAiBA,EAAI,OCKnBS,EAfA,SAAAhB,GAAyDA,EAAtDd,KAAsD,IAAhDvC,EAAgDqD,EAAhDrD,QAASwC,EAAuCa,EAAvCb,OAAQkB,EAA+BL,EAA/BK,YAAahC,EAAkB2B,EAAlB3B,MAAOiC,EAAWN,EAAXM,EAAGC,EAAQP,EAARO,EAC9D,OACEhE,EAAAC,EAAAC,cAACwE,EAAD,CACE/B,KAAK,QACLvC,QAASA,EACTyD,OAAQ,IACRjB,OAAQA,EACRkB,YAAaA,EACbhC,MAAOA,EACPiC,EAAGA,EACHC,EAAGA,KCaMW,EAvBE,SAAAlB,GAAiE,IAA9Dd,EAA8Dc,EAA9Dd,KAAMvC,EAAwDqD,EAAxDrD,QAASyD,EAA+CJ,EAA/CI,OAAQjB,EAAuCa,EAAvCb,OAAQkB,EAA+BL,EAA/BK,YAAahC,EAAkB2B,EAAlB3B,MAAOiC,EAAWN,EAAXM,EAAGC,EAAQP,EAARO,EAClEY,EAAWf,EAASX,EACpB2B,EAAWhB,EAAST,EAMpBc,EALW,CACf,CAACW,EAAUD,GACX,CAAC,GAAIf,GACL,EAAEgB,EAAUD,IAGXjE,IAAI,SAAAwD,GAAK,SAAAC,OAAOL,EAAII,EAAM,GAAjB,KAAAC,OAAuBJ,EAAIG,EAAM,MAC1CE,KAAK,KACR,OACErE,EAAAC,EAAAC,cAAA,WACEyC,KAAMA,EACNvC,QAASA,EACT8D,OAAQA,EACRtB,OAAQA,EACRkB,YAAaA,EACbhC,MAAOA,KClBPwC,EAAe,GAcNQ,EAZS,SAAArB,GAAA,IAAGd,EAAHc,EAAGd,KAAMkB,EAATJ,EAASI,OAAQjB,EAAjBa,EAAiBb,OAAQkB,EAAzBL,EAAyBK,YAAahC,EAAtC2B,EAAsC3B,MAAOiC,EAA7CN,EAA6CM,EAAGC,EAAhDP,EAAgDO,EAAhD,OACvBhE,EAAAC,EAAAC,cAAC6E,EAAD,CACCpC,KAAMA,GAAQ,QACdkB,OAAQA,GAAU,EACjBjB,OAAQA,GAAU,QAClBkB,YAAaA,GAAe,GAC5BhC,MAAOA,GAASwC,EAChBP,EAAgB,kBAANA,EAAiBA,EAAI,IAC/BC,EAAgB,kBAANA,EAAiBA,EAAI,OCKnBgB,EAfF,SAAAvB,GAAyDA,EAAtDd,KAAsD,IAAhDvC,EAAgDqD,EAAhDrD,QAASwC,EAAuCa,EAAvCb,OAAQkB,EAA+BL,EAA/BK,YAAahC,EAAkB2B,EAAlB3B,MAAOiC,EAAWN,EAAXM,EAAGC,EAAQP,EAARO,EAC5D,OACEhE,EAAAC,EAAAC,cAAC+E,EAAD,CACEtC,KAAK,QACLvC,QAASA,EACTyD,OAAQ,GACRjB,OAAQA,EACRkB,YAAaA,EACbhC,MAAOA,EACPiC,EAAGA,EACHC,EAAGA,KCGMkB,EAfA,SAAAzB,GAAiE,IAA9Dd,EAA8Dc,EAA9Dd,KAAMvC,EAAwDqD,EAAxDrD,QAASyD,EAA+CJ,EAA/CI,OAAQjB,EAAuCa,EAAvCb,OAAQkB,EAA+BL,EAA/BK,YAAahC,EAAkB2B,EAAlB3B,MAAOiC,EAAWN,EAAXM,EAAGC,EAAQP,EAARO,EACtE,OACEhE,EAAAC,EAAAC,cAAA,UACEyC,KAAMA,EACNvC,QAASA,EACTwC,OAAQA,EACRkB,YAAaA,EACbhC,MAAOA,EACPqD,EAAGtB,EACHuB,GAAIrB,EACJsB,GAAIrB,KCRJM,EAAe,GAcNgB,EAZO,SAAA7B,GAAA,IAAGd,EAAHc,EAAGd,KAAMkB,EAATJ,EAASI,OAAQjB,EAAjBa,EAAiBb,OAAQkB,EAAzBL,EAAyBK,YAAahC,EAAtC2B,EAAsC3B,MAAOiC,EAA7CN,EAA6CM,EAAGC,EAAhDP,EAAgDO,EAAhD,OACrBhE,EAAAC,EAAAC,cAACqF,EAAD,CACC5C,KAAMA,GAAQ,QACbC,OAAQA,GAAU,QAClBkB,YAAaA,GAAe,GAC5BhC,MAAOA,GAASwC,EAChBT,OAA0B,kBAAXA,EAAsBA,EAAS,IAC9CE,EAAgB,kBAANA,EAAiBA,EAAI,IAC/BC,EAAgB,kBAANA,EAAiBA,EAAI,OCKnBwB,EAfC,SAAA/B,GAAyD,IAAtDd,EAAsDc,EAAtDd,KAAMvC,EAAgDqD,EAAhDrD,QAASwC,EAAuCa,EAAvCb,OAAQkB,EAA+BL,EAA/BK,YAAahC,EAAkB2B,EAAlB3B,MAAOiC,EAAWN,EAAXM,EAAGC,EAAQP,EAARO,EAC/D,OACEhE,EAAAC,EAAAC,cAACuF,EAAD,CACE9C,KAAMA,EACNvC,QAASA,EACTyD,OAAQ,GACRjB,OAAQA,EACRkB,YAAaA,EACbhC,MAAOA,EACPiC,EAAGA,EACHC,EAAGA,KCTH0B,EADS,EACWxC,EACpByC,EAFS,EAEWvC,EACpBwC,EAAW,CACf,CAAC,EAJY,GAKb,CAACD,EAAUD,GACX,CAACC,GAAWD,GACZ,CAAC,GAPY,GAQb,EAAEC,GAAWD,GACb,EAAEC,EAAUD,IAmBCG,EAhBH,SAAApC,GAAyD,IAAtDd,EAAsDc,EAAtDd,KAAMvC,EAAgDqD,EAAhDrD,QAASwC,EAAuCa,EAAvCb,OAAQkB,EAA+BL,EAA/BK,YAAahC,EAAkB2B,EAAlB3B,MAAOiC,EAAWN,EAAXM,EAAGC,EAAQP,EAARO,EACrDE,EAAS0B,EACZjF,IAAI,SAAAwD,GAAK,SAAAC,OAAOL,EAAII,EAAM,GAAjB,KAAAC,OAAuBJ,EAAIG,EAAM,MAC1CE,KAAK,KACR,OACErE,EAAAC,EAAAC,cAAA,WACEyC,KAAMA,EACNvC,QAASA,EACT8D,OAAQA,EACRtB,OAAQA,EACRkB,YAAaA,EACbhC,MAAOA,KCvBPwC,EAAe,GAaNwB,EAXI,SAAArC,GAAA,IAAGd,EAAHc,EAAGd,KAAcC,GAAjBa,EAASI,OAATJ,EAAiBb,QAAQkB,EAAzBL,EAAyBK,YAAahC,EAAtC2B,EAAsC3B,MAAOiC,EAA7CN,EAA6CM,EAAGC,EAAhDP,EAAgDO,EAAhD,OAClBhE,EAAAC,EAAAC,cAAC6F,EAAD,CACCpD,KAAMA,GAAQ,QACbC,OAAQA,GAAU,kBAClBkB,YAAaA,GAAe,GAC5BhC,MAAOA,GAASwC,EAChBP,EAAgB,kBAANA,EAAiBA,EAAI,IAC/BC,EAAgB,kBAANA,EAAiBA,EAAI,OCFnBgC,EALA,SAAAvC,GAAqB,IAAlBwC,EAAkBxC,EAAlBwC,MAAOlC,EAAWN,EAAXM,EAAGC,EAAQP,EAARO,EACrBkC,EAAgBzD,EAAwBwD,GAC9C,OAAOjG,EAAAC,EAAAC,cAAC+E,EAADzF,OAAA2G,OAAA,GAAqBD,EAArB,CAAoCrC,OAAQ,GAAKE,EAAGA,EAAGC,EAAGA,MCGnDoC,EALA,SAAA3C,GAAqB,IAAlBwC,EAAkBxC,EAAlBwC,MAAOlC,EAAWN,EAAXM,EAAGC,EAAQP,EAARO,EACrBkC,EAAgBzD,EAAwBwD,GAC9C,OAAOjG,EAAAC,EAAAC,cAACwE,EAADlF,OAAA2G,OAAA,GAAmBD,EAAnB,CAAkCrC,OAAQ,IAAME,EAAGA,EAAGC,EAAGA,MCGlDqC,EALC,SAAA5C,GAA6B,IAA1BwC,EAA0BxC,EAA1BwC,MAAOpC,EAAmBJ,EAAnBI,OAAQE,EAAWN,EAAXM,EAAGC,EAAQP,EAARO,EAC9BkC,EAAgBzD,EAAwBwD,GAC9C,OAAOjG,EAAAC,EAAAC,cAACuF,EAADjG,OAAA2G,OAAA,GAAmBD,EAAnB,CAAkCrC,OAAQA,EAAQE,EAAGA,EAAGC,EAAGA,MCapDsC,EAfE,SAAA7C,GAAqB,IAAlB8C,EAAkB9C,EAAlB8C,MAAOxC,EAAWN,EAAXM,EAAGC,EAAQP,EAARO,EAC7B,GAAqB,IAAjBuC,EAAMC,OAAc,CACvB,IAAMC,EAAOF,EAAM,GACnB,GAAkB,YAAdE,EAAKC,KACR,OAAO1G,EAAAC,EAAAC,cAACyG,EAAD,CAASV,MAAOQ,EAAKR,MAAOpC,OAAQ,GAAKE,EAAGA,EAAGC,EAAGA,IAE1D,GAAkB,WAAdyC,EAAKC,KACR,OAAO1G,EAAAC,EAAAC,cAAC0G,EAAD,CAAQX,MAAOQ,EAAKR,MAAOlC,EAAGA,EAAGC,EAAGA,IAE5C,GAAkB,WAAdyC,EAAKC,KACR,OAAO1G,EAAAC,EAAAC,cAAC2G,EAAD,CAAQZ,MAAOQ,EAAKR,MAAOlC,EAAGA,EAAGC,EAAGA,MCLxC8C,EADa,EACc1D,EAC3B2D,EAFa,EAEM7D,EAuEV8D,EApED,SAAAvD,GAA4B,IAAzBwD,EAAyBxD,EAAzBwD,MAAOC,EAAkBzD,EAAlByD,KAAMpF,EAAY2B,EAAZ3B,MAEtBC,EACJoF,KARe,EAUDJ,IAAQG,EAAO,GAAK,EAQ9BvD,EAAU,EAfO,GAGamD,GAAeI,EAAO,IAMzCnF,EAEfoF,GACAL,EAAcI,EAAO,EACP,EAAdJ,GAAmBI,EAAO,GAEcnF,GAAQsC,KAAK,KACvD,OACErE,EAAAC,EAAAC,cAACkH,EAAD,CAAKtF,MAAOA,EAAO6B,QAASA,GACzBsD,EAAMtG,IAAI,SAAC0G,EAAKxG,GACf,IAAMyG,EAAOD,EAAIC,KAAKC,WAAW,GAAK,GAChCC,EAAOH,EAAIG,KAAO,EAClBzD,EAAI+C,EAAcQ,EAAOR,EAAc,EAAKU,EAAOV,EACnD9C,IAzBK,EAyBcwD,GAzBd,EAyBmCT,IAC9C,MAAiB,WAAbM,EAAIX,KAEJ1G,EAAAC,EAAAC,cAACF,EAAAC,EAAMwH,SAAP,CAAgB3G,IAAKD,GACnBb,EAAAC,EAAAC,cAACwH,EAAD,CAAY/E,KAAM0E,EAAIpB,MAAOlC,EAAGA,EAAGC,EAAGA,IACtChE,EAAAC,EAAAC,cAACyH,EAAD,CAAQ5D,EAAGA,EAAGC,EAAGA,KAIN,SAAbqD,EAAIX,KAEJ1G,EAAAC,EAAAC,cAACF,EAAAC,EAAMwH,SAAP,CAAgB3G,IAAKD,GACnBb,EAAAC,EAAAC,cAACwH,EAAD,CAAY/E,KAAM0E,EAAIpB,MAAOlC,EAAGA,EAAGC,EAAGA,IACtChE,EAAAC,EAAAC,cAAC0H,EAAD,CAAM7D,EAAGA,EAAGC,EAAGA,KAIJ,YAAbqD,EAAIX,KAEJ1G,EAAAC,EAAAC,cAACF,EAAAC,EAAMwH,SAAP,CAAgB3G,IAAKD,GACnBb,EAAAC,EAAAC,cAACwH,EAAD,CAAY/E,KAAM0E,EAAIpB,MAAOlC,EAAGA,EAAGC,EAAGA,IACtChE,EAAAC,EAAAC,cAAC2H,EAAD,CAAS9D,EAAGA,EAAGC,EAAGA,KAKtBhE,EAAAC,EAAAC,cAACwH,EAAD,CACE/E,KAAML,EAAc+E,EAAIX,MACxB5F,IAAKD,EACLkD,EAAGA,EACHC,EAAGA,MAIRiD,EAAMtG,IAAI,SAAC0G,EAAKxG,GACf,IAAKwG,EAAId,MACP,OAAO,KAET,IAAMe,EAAOD,EAAIC,KAAKC,WAAW,GAAK,GAChCC,EAAOH,EAAIG,KAAO,EAClBzD,EAAI+C,EAAcQ,EAAOR,EAAc,EAAKU,EAAOV,EACnD9C,IAlEK,EAkEcwD,GAlEd,EAkEmCT,IAC9C,OAAO/G,EAAAC,EAAAC,cAAC4H,EAAD,CAAUhH,IAAK,IAAMD,EAAO0F,MAAOc,EAAId,MAAOxC,EAAGA,EAAGC,EAAGA,QCzEhEiD,EAAQ,CACb,CAAEK,KAAM,IAAKE,KAAM,EAAGd,KAAM,OAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,UAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,UAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,YAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,OAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,OAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,IAWLO,EARM,kBACpB/H,EAAAC,EAAAC,cAAC8H,EAAD,CACCf,MAAOA,EACPC,KAAM,EACNpF,MAAO,CAAEC,OAAQ,YC5CbkF,EAAQ,CACb,CAAEK,KAAM,IAAKE,KAAM,EAAGd,KAAM,OAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,UAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,UAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,OAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,YAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,YAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,OAC5B,CAAEY,KAAM,IAAKE,KAAM,EAAGd,KAAM,OAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,EAAGd,KAAM,UAC5B,CAAEY,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,IAWLS,GARS,kBACvBjI,EAAAC,EAAAC,cAAC8H,EAAD,CACCf,MAAOA,EACPC,KAAM,EACNpF,MAAO,CAAEC,OAAQ,YC1DJmG,GAZa,WAC3B,OACClI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACE4B,MAAO,CAAEC,OAAQ,SAClBC,IAAI,gCACJC,IAAI,4BCMMkG,GAZY,WAC1B,OACCnI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACE4B,MAAO,CAAEC,OAAQ,SAClBC,IAAI,8BACJC,IAAI,0BCJHqC,GAAe,CACpBvC,OAAQ,QAYMqG,GATI,SAAA3E,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAClB1D,EAAAC,EAAAC,cAACkH,EAAD,CACEtF,MAAOwC,GACPX,QAAQ,eAEPD,ICFWsC,GANA,SAAA1G,GAAK,OAClBU,EAAAC,EAAAC,cAACmI,GAAD,KACErI,EAAAC,EAAAC,cAAC+E,EAAoB3F,KCIVgJ,GANG,SAAA7E,GAAA,IAAG8E,EAAH9E,EAAG8E,SAAH,OACjBvI,EAAAC,EAAAC,cAACmI,GAAD,KACErI,EAAAC,EAAAC,cAACwH,EAAea,KCIJC,GANM,SAAAlJ,GAAK,OACzBU,EAAAC,EAAAC,cAACmI,GAAD,KACErI,EAAAC,EAAAC,cAACwE,EAAkBpF,KCIPmJ,GANO,SAAAnJ,GAAK,OAC1BU,EAAAC,EAAAC,cAACmI,GAAD,KACCrI,EAAAC,EAAAC,cAACuF,EAAkBnG,KCONoJ,GAZc,WAC5B,OACC1I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACE4B,MAAO,CAAEC,OAAQ,SAClBC,IAAI,iCACJC,IAAI,6BCQM0G,GAAA,CAAC,CACd5I,MAAO,eACPU,KAAM,2JACL,CACDV,MAAO,qBACPU,KAAM,4DACNQ,QAAS,CACP,yCACA,yCACA,6CACA,gCAED,CACDlB,MAAO,kBACPkB,QAAS,CACP,uBACA,qBACA,wBACA,0BACA,wCACA,qCACA,uCACA,wCACA,uCACA,uCACA,2BACA,4BACA,6BAED,CACDlB,MAAO,QACPkB,QAAS,CAAC,CACRlB,MAAO,cACPU,KAAM,2GACNQ,QAAS,CACP,4FACAjB,EAAAC,EAAAC,cAAC0I,GAAD,MACA,qIACA,wEAED,CACD7I,MAAO,UACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAAC2I,GAAD,MACA,WACA,+BACA7I,EAAAC,EAAAC,cAAC4I,GAAD,MACA,qDACA,0CAED,CACD/I,MAAO,SACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAAC6I,GAAD,MACA,WACA,iEACA/I,EAAAC,EAAAC,cAAC8I,EAAD,MACA,4HACAhJ,EAAAC,EAAAC,cAAC+I,EAAD,MACA,mGACA,qCACAjJ,EAAAC,EAAAC,cAACgJ,EAAD,MACA,uFACA,sDAED,CACDnJ,MAAO,SACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAACiJ,GAAD,MACA,WACA,wDACAnJ,EAAAC,EAAAC,cAACkJ,GAAD,MACA,+CACA,sCAGH,CACDrJ,MAAO,YACPU,KAAM,oIACNQ,QAAS,CACP,uEACAjB,EAAAC,EAAAC,cAACmJ,EAAD,MACA,CACEtJ,MAAO,UACPkB,QAAS,CACP,WACA,sBAED,CACDlB,MAAO,OACPkB,QAAS,CACP,WACA,iCAED,CACDlB,MAAO,SACPkB,QAAS,CACP,WACA,4CAIL,CACDlB,MAAO,YACPkB,QAAS,CAAC,CACRlB,MAAO,OACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAACoJ,GAAD,MACA,mBACA,gCAED,CACDvJ,MAAO,iBACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAACoJ,GAAD,CAAWf,SAAU,CAAE5F,KAAM,iBAC7B,uCACA,0CAED,CACD5C,MAAO,qBACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAACoJ,GAAD,CAAWf,SAAU,CAAE5F,KAAM,iBAC7B,wCACA,0CAED,CACD5C,MAAO,sBACPkB,QAAS,CACPjB,EAAAC,EAAAC,cAACoJ,GAAD,CAAWf,SAAU,CAAE5F,KAAM,YAC7B,sDACA,4CAGH,CACD5C,MAAO,QACPkB,QAAS,CAAC,CACRlB,MAAO,0BACPkB,QAAS,CACP,+IACA,WACAjB,EAAAC,EAAAC,cAACqJ,EAAD,MACA,sJACA,WACAvJ,EAAAC,EAAAC,cAACsJ,GAAD,QAED,CACDzJ,MAAO,oBACPkB,QAAS,CACP,0LAEA,qEACA,+BACA,qCACA,6EACA,+BACA,0BACA,sBACA,sBACA,CACElB,MAAO,UACPkB,QAAS,CACP,0CACA,0CACA,2CACA,2CACA,0CACA,0CACA,sCACA,sCACA,uCACA,uCACA,kCACA,wCAKP,CACDlB,MAAO,WACPU,KAAM,6FACL,CACDV,MAAO,UACPkB,QAAS,CACP,OACA,SACA,OACA,aAED,CACDlB,MAAO,WACPkB,QAAS,CACP,kIACA,wCACA,qDACA,6CACA,gHAED,CACDlB,MAAO,SACPU,KAAM,mEACNQ,QAAS,CACP,gIACA,4DACA,6GACA,yFACA,mKACA,CACElB,MAAO,UACPU,KAAM,6OAGT,CACDV,MAAO,OACPU,KAAM,0JACNQ,QAAS,CACP,6BACA,iCACA,oCAED,CACDlB,MAAO,WACPU,KAAM,sHACNQ,QAAS,CACP,8DACA,uDACA,wCACA,4CACA,8CACA,iHC1NWwI,8MALbC,YAAc,WACZ,OAAOf,GAAMhI,IAAI,SAACgJ,EAAM9I,GAAP,OAAiBb,EAAAC,EAAAC,cAAC0J,EAADpK,OAAA2G,OAAA,GAAUwD,EAAV,CAAgB7I,IAAKD,gFAdvD,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,2DACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,oDAEDR,KAAKgK,sBAVI9H,aCDlBiI,IAASC,OAAO9J,EAAAC,EAAAC,cAAC6J,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.a2b7ee15.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Rule extends Component {\n  constructor(props) {\n    super(props);\n    const { initialIsExpanded } = this.props;\n    this.state = {\n      isExpanded: initialIsExpanded === undefined ? true : initialIsExpanded,\n    }\n  }\n\n  render() {\n  \tconst { bullets, text, title } = this.props;\n    return (\n      <div>\n\t\t\t\t{title && this.renderTitle()}\n\t\t\t\t{text && this.renderText()}\n\t\t\t\t{bullets && this.renderBullets()}\n\t\t\t</div>\n    );\n  }\n\n  renderTitle = () => {\n  \tconst { title } = this.props;\n  \treturn (\n  \t\t<h3 className=\"title\" onClick={this.handleClickTitle}>\n  \t\t  {this.state.isExpanded ? '-' : '+'}&nbsp;\n  \t\t\t{title}\n  \t\t</h3>\n\t\t);\n  }\n\n  renderText = () => {\n  \tif (!this.state.isExpanded) {\n  \t\treturn;\n  \t}\n  \tconst { text } = this.props;\n  \treturn text\n  \t\t.split('\\n')\n  \t\t.map((line, index) => <p key={index}>{line}</p>);\n  }\n\n  renderBullets = () => {\n  \tif (!this.state.isExpanded) {\n  \t\treturn;\n  \t}\n  \tconst { bullets } = this.props;\n  \tconst items = bullets.map((bullet, index) => {\n  \t\tconst child = typeof bullet === 'string' || React.isValidElement(bullet)\n  \t\t\t? bullet\n  \t\t\t: <Rule {...bullet} />;\n  \t\treturn <li key={index}>{child}</li>;\n  \t});\n  \treturn <ul>{items}</ul>\n  }\n\n  handleClickTitle = event => {\n  \tevent.stopPropagation();\n  \tthis.setState({ isExpanded: !this.state.isExpanded });\n  }\n}\n\nexport default Rule;\n","import React from 'react'\n\nconst ArcherArtilleryDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '12rem' }}\n\t\t  \tsrc='img/archer-artillery-diagram.svg'\n\t\t  \talt='archer-artillery-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default ArcherArtilleryDiagram","import React from 'react'\n\nconst ArcherAttackDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '10rem' }}\n\t\t  \tsrc='img/archer-attack-diagram.svg'\n\t\t  \talt='archer-attack-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default ArcherAttackDiagram","import React from 'react'\n\nconst ArcherMovementDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '20rem', maxWidth: '100%' }}\n\t\t  \tsrc='img/archer-movement-diagram.svg'\n\t\t  \talt='archer-movement-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default ArcherMovementDiagram","import React from 'react'\n\nconst CastleExample = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '6rem' }}\n\t\t  \tsrc='img/castle-example.svg'\n\t\t  \talt='castle-example'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default CastleExample","export const typeToFillMap = {\n\t[undefined]: 'Wheat',\n\tsea: 'DeepSkyBlue',\n\tforest: 'ForestGreen',\n\tmountain: 'Sienna',\n}\n\nexport const colorToFillAndStrokeMap = {\n\tblack: { fill: 'black', stroke: 'white' },\n\twhite: { fill: 'white', stroke: 'black' },\n}\n\nexport const toRad = deg => deg * (Math.PI / 180)\nexport const COS_30 = Math.cos(toRad(30))\nexport const COS_60 = Math.cos(toRad(60))\nexport const SIN_60 = Math.sin(toRad(60))\nexport const COS_90 = Math.cos(toRad(90))\nexport const SIN_90 = Math.sin(toRad(90))\nexport const TAN_30 = Math.tan(toRad(30))\n","import React from 'react'\n\nconst Svg = ({ children, style, viewBox }) => (\n\t<svg\n\t\tstyle={style}\n\t\tviewBox={viewBox}\n\t>\n\t  {children}\n\t </svg>\n);\n\nexport default Svg;","import React from 'react'\n\nimport { SIN_90 } from '../constants'\n\nconst Square = ({ fill, onClick, radius, stroke, strokeWidth, style, x, y }) => {\n  const side = radius * SIN_90\n  const vertices = [\n    [side, side],\n    [side, -side],\n    [-side, -side],\n    [-side, side],\n  ]\n  const points = vertices\n    .map(point => `${x + point[0]},${y + point[1]}`)\n    .join(' ')\n  return (\n    <polygon\n      fill={fill}\n      onClick={onClick}\n      points={points}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n    />\n  )\n}\n\nexport default Square\n","import React from 'react'\n\nimport Square from '.';\n\nconst defaultStyle = {}\n\nconst DefaultSquare = ({ fill, radius, stroke, strokeWidth, style, x, y }) => (\n\t<Square\n\t\tfill={fill || 'white'}\n\t\tradius={radius || 0.75}\n\t  stroke={stroke || \"black\"}\n\t  strokeWidth={strokeWidth || 0.1}\n\t  style={style || defaultStyle}\n\t  x={typeof x === 'number' ? x : 1.1}\n\t  y={typeof y === 'number' ? y : 1.1}\n\t/>\n);\n\nexport default DefaultSquare;\n","import React from 'react'\n\nimport DefaultSquare from '../Square/default'\n\nconst Castle = ({ fill, onClick, stroke, strokeWidth, style, x, y }) => {\n  return (\n    <DefaultSquare\n      fill=\"wheat\"\n      onClick={onClick}\n      radius={0.45}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n      x={x}\n      y={y}\n    />\n  )\n}\n\nexport default Castle\n","import React from 'react'\n\nimport { COS_60, SIN_60 } from '../constants'\n\nconst Triangle = ({ fill, onClick, radius, stroke, strokeWidth, style, x, y }) => {\n  const adjacent = radius * COS_60\n  const opposite = radius * SIN_60\n  const vertices = [\n    [opposite, adjacent],\n    [0, -radius],\n    [-opposite, adjacent],\n  ]\n  const points = vertices\n    .map(point => `${x + point[0]},${y + point[1]}`)\n    .join(' ')\n  return (\n    <polygon\n      fill={fill}\n      onClick={onClick}\n      points={points}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n    />\n  )\n}\n\nexport default Triangle\n","import React from 'react'\n\nimport Hex from '.';\n\nconst defaultStyle = {}\n\nconst DefaultTriangle = ({ fill, radius, stroke, strokeWidth, style, x, y }) => (\n\t<Hex\n\t\tfill={fill || 'white'}\n\t\tradius={radius || 1}\n\t  stroke={stroke || \"black\"}\n\t  strokeWidth={strokeWidth || 0.1}\n\t  style={style || defaultStyle}\n\t  x={typeof x === 'number' ? x : 1.1}\n\t  y={typeof y === 'number' ? y : 1.1}\n\t/>\n);\n\nexport default DefaultTriangle;\n","import React from 'react'\n\nimport DefaultTriangle from '../Triangle/default'\n\nconst Town = ({ fill, onClick, stroke, strokeWidth, style, x, y }) => {\n  return (\n    <DefaultTriangle\n      fill=\"wheat\"\n      onClick={onClick}\n      radius={0.6}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n      x={x}\n      y={y}\n    />\n  )\n}\n\nexport default Town\n","import React from 'react'\n\nconst Circle = ({ fill, onClick, radius, stroke, strokeWidth, style, x, y }) => {\n  return (\n    <circle\n      fill={fill}\n      onClick={onClick}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n      r={radius}\n      cx={x}\n      cy={y}\n    />\n  )\n}\n\nexport default Circle\n","import React from 'react'\n\nimport Circle from '.';\n\nconst defaultStyle = {}\n\nconst DefaultCircle = ({ fill, radius, stroke, strokeWidth, style, x, y }) => (\n\t<Circle\n\t\tfill={fill || 'white'}\n\t  stroke={stroke || \"black\"}\n\t  strokeWidth={strokeWidth || 0.1}\n\t  style={style || defaultStyle}\n\t  radius={typeof radius === 'number' ? radius : 0.75 }\n\t  x={typeof x === 'number' ? x : 1.1}\n\t  y={typeof y === 'number' ? y : 1.1}\n\t/>\n);\n\nexport default DefaultCircle;\n","import React from 'react'\n\nimport DefaultCircle from '../Circle/default'\n\nconst Village = ({ fill, onClick, stroke, strokeWidth, style, x, y }) => {\n  return (\n    <DefaultCircle\n      fill={fill}\n      onClick={onClick}\n      radius={0.5}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n      x={x}\n      y={y}\n    />\n  )\n}\n\nexport default Village\n","import React from 'react'\n\nimport { COS_60, SIN_60 } from '../constants'\n\nconst RADIUS = 1\nconst ADJACENT = RADIUS * COS_60\nconst OPPOSITE = RADIUS * SIN_60\nconst VERTICES = [\n  [0, RADIUS],\n  [OPPOSITE, ADJACENT],\n  [OPPOSITE, -ADJACENT],\n  [0, -RADIUS],\n  [-OPPOSITE, -ADJACENT],\n  [-OPPOSITE, ADJACENT],\n]\n\nconst Hex = ({ fill, onClick, stroke, strokeWidth, style, x, y }) => {\n  const points = VERTICES\n    .map(point => `${x + point[0]},${y + point[1]}`)\n    .join(' ')\n  return (\n    <polygon\n      fill={fill}\n      onClick={onClick}\n      points={points}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      style={style}\n    />\n  )\n}\n\nexport default Hex\n","import React from 'react'\n\nimport Hex from '.';\n\nconst defaultStyle = {}\n\nconst DefaultHex = ({ fill, radius, stroke, strokeWidth, style, x, y }) => (\n\t<Hex\n\t\tfill={fill || 'wheat'}\n\t  stroke={stroke || \"hsl(0, 0%, 30%)\"}\n\t  strokeWidth={strokeWidth || 0.1}\n\t  style={style || defaultStyle}\n\t  x={typeof x === 'number' ? x : 1.1}\n\t  y={typeof y === 'number' ? y : 1.1}\n\t/>\n);\n\nexport default DefaultHex;\n","import React from 'react'\n\nimport DefaultTriangle from '../Triangle/default';\n\nimport { colorToFillAndStrokeMap } from '../constants'\n\nconst Archer = ({ color, x, y }) => {\n\tconst fillAndStroke = colorToFillAndStrokeMap[color]\n\treturn <DefaultTriangle {...fillAndStroke} radius={0.6} x={x} y={y} />\n};\n\nexport default Archer;","import React from 'react'\n\nimport DefaultSquare from '../Square/default'\n\nimport { colorToFillAndStrokeMap } from '../constants'\n\nconst Knight = ({ color, x, y }) => {\n\tconst fillAndStroke = colorToFillAndStrokeMap[color]\n\treturn <DefaultSquare {...fillAndStroke} radius={0.45} x={x} y={y} />\n}\n\nexport default Knight","import React from 'react'\n\nimport DefaultCircle from '../Circle/default';\n\nimport { colorToFillAndStrokeMap } from '../constants'\n\nconst Soldier = ({ color, radius, x, y }) => {\n\tconst fillAndStroke = colorToFillAndStrokeMap[color]\n\treturn <DefaultCircle {...fillAndStroke} radius={radius} x={x} y={y} />\n}\n\nexport default Soldier;","import React from 'react'\n\nimport Archer from '../Archer'\nimport Knight from '../Knight'\nimport Soldier from '../Soldier'\n\nconst HexUnits = ({ units, x, y }) => {\n\tif (units.length === 1) {\n\t\tconst unit = units[0];\n\t\tif (unit.type === 'soldier') {\n\t\t\treturn <Soldier color={unit.color} radius={0.5} x={x} y={y} />\n\t\t}\n\t\tif (unit.type === 'archer') {\n\t\t\treturn <Archer color={unit.color} x={x} y={y} />\n\t\t}\n\t\tif (unit.type === 'knight') {\n\t\t\treturn <Knight color={unit.color} x={x} y={y} />\n\t\t}\n\t}\n};\n\nexport default HexUnits;\n","import React from 'react'\n\nimport { typeToFillMap, COS_60, SIN_60 } from '../constants'\nimport Svg from '../Svg'\nimport Castle from '../Castle'\nimport Town from '../Town'\nimport Village from '../Village'\nimport DefaultHex from '../Hex/default'\nimport HexUnits from '../HexUnits'\n\nconst HEX_RADIUS = 1 // vertical\nconst HORZ_RADIUS = HEX_RADIUS * SIN_60\nconst OPP = HEX_RADIUS * COS_60\nconst HEX_STROKE_WIDTH = 0.1\n\nconst Board = ({ hexes, size, style }) => {\n  const originX = -HEX_STROKE_WIDTH - HORZ_RADIUS * (size - 1)\n  const height = (\n    HEX_STROKE_WIDTH * 2 +\n    HEX_RADIUS * 2 +\n    (HEX_RADIUS + OPP) * (size - 1) * 2\n  )\n  const originY = -height\n  const width = (\n    HEX_STROKE_WIDTH * 2 +\n    HORZ_RADIUS * size * 2 +\n    HORZ_RADIUS * 2 * (size - 1)\n  )\n  const viewBox = [originX, originY, width, height].join(',')\n  return (\n    <Svg style={style} viewBox={viewBox}>\n      {hexes.map((hex, index) => {\n        const file = hex.file.charCodeAt(0) - 97\n        const rank = hex.rank - 1\n        const x = HORZ_RADIUS + file * HORZ_RADIUS * 2 - (rank * HORZ_RADIUS)\n        const y = -(HEX_RADIUS + rank * (HEX_RADIUS + OPP))\n        if (hex.type === 'castle') {\n          return (\n            <React.Fragment key={index}>\n              <DefaultHex fill={hex.color} x={x} y={y} />\n              <Castle x={x} y={y} />\n            </React.Fragment>\n          )\n        }\n        if (hex.type === 'town') {\n          return (\n            <React.Fragment key={index}>\n              <DefaultHex fill={hex.color} x={x} y={y} />\n              <Town x={x} y={y} />\n            </React.Fragment>\n          )\n        }\n        if (hex.type === 'village') {\n          return (\n            <React.Fragment key={index}>\n              <DefaultHex fill={hex.color} x={x} y={y} />\n              <Village x={x} y={y} />\n            </React.Fragment>\n          )\n        }\n        return (\n          <DefaultHex\n            fill={typeToFillMap[hex.type]}\n            key={index}\n            x={x}\n            y={y}\n          />\n        )\n      })}\n      {hexes.map((hex, index) => {\n        if (!hex.units) {\n          return null;\n        }\n        const file = hex.file.charCodeAt(0) - 97\n        const rank = hex.rank - 1\n        const x = HORZ_RADIUS + file * HORZ_RADIUS * 2 - (rank * HORZ_RADIUS)\n        const y = -(HEX_RADIUS + rank * (HEX_RADIUS + OPP))\n        return <HexUnits key={'u' + index} units={hex.units} x={x} y={y} />\n      })}\n    </Svg>\n  )\n}\n\nexport default Board","import React from 'react'\n\nimport Board from '.'\n\nconst hexes = [\n\t{ file: 'a', rank: 1, type: 'sea' },\n\t{ file: 'a', rank: 2 },\n\t{ file: 'a', rank: 3 },\n\t{ file: 'a', rank: 4 },\n\t{ file: 'b', rank: 1 },\n\t{ file: 'b', rank: 2 },\n\t{ file: 'b', rank: 3 },\n\t{ file: 'b', rank: 4, type: 'forest' },\n\t{ file: 'b', rank: 5 },\n\t{ file: 'c', rank: 1 },\n\t{ file: 'c', rank: 2 },\n\t{ file: 'c', rank: 3 },\n\t{ file: 'c', rank: 4 },\n\t{ file: 'c', rank: 5 },\n\t{ file: 'c', rank: 6 },\n\t{ file: 'd', rank: 1 },\n\t{ file: 'd', rank: 2, type: 'forest' },\n\t{ file: 'd', rank: 3 },\n\t{ file: 'd', rank: 4, type: 'mountain' },\n\t{ file: 'd', rank: 5 },\n\t{ file: 'd', rank: 6 },\n\t{ file: 'd', rank: 7 },\n\t{ file: 'e', rank: 2 },\n\t{ file: 'e', rank: 3 },\n\t{ file: 'e', rank: 4 },\n\t{ file: 'e', rank: 5 },\n\t{ file: 'e', rank: 6, type: 'sea' },\n\t{ file: 'e', rank: 7 },\n\t{ file: 'f', rank: 3 },\n\t{ file: 'f', rank: 4 },\n\t{ file: 'f', rank: 5 },\n\t{ file: 'f', rank: 6 },\n\t{ file: 'f', rank: 7 },\n\t{ file: 'g', rank: 4, type: 'sea' },\n\t{ file: 'g', rank: 5 },\n\t{ file: 'g', rank: 6 },\n\t{ file: 'g', rank: 7 },\n]\n\nconst DefaultBoard = () => (\n\t<Board\n\t\thexes={hexes}\n\t\tsize={4}\n\t\tstyle={{ height: '10rem' }}\n\t/>\n);\n\nexport default DefaultBoard;","import React from 'react'\n\nimport Board from '.'\n\nconst hexes = [\n\t{ file: 'a', rank: 1, type: 'sea' },\n\t{ file: 'a', rank: 2 },\n\t{ file: 'a', rank: 3 },\n\t{ file: 'a', rank: 4 },\n\t{ file: 'a', rank: 5 },\n\t{ file: 'b', rank: 1 },\n\t{ file: 'b', rank: 2 },\n\t{ file: 'b', rank: 3 },\n\t{ file: 'b', rank: 4, type: 'forest' },\n\t{ file: 'b', rank: 5 },\n\t{ file: 'b', rank: 6 },\n\t{ file: 'c', rank: 1 },\n\t{ file: 'c', rank: 2 },\n\t{ file: 'c', rank: 3 },\n\t{ file: 'c', rank: 4 },\n\t{ file: 'c', rank: 5 },\n\t{ file: 'c', rank: 6 },\n\t{ file: 'c', rank: 7 },\n\t{ file: 'd', rank: 1 },\n\t{ file: 'd', rank: 2, type: 'forest' },\n\t{ file: 'd', rank: 3 },\n\t{ file: 'd', rank: 4 },\n\t{ file: 'd', rank: 5 },\n\t{ file: 'd', rank: 6 },\n\t{ file: 'd', rank: 7, type: 'sea' },\n\t{ file: 'd', rank: 8 },\n\t{ file: 'e', rank: 1 },\n\t{ file: 'e', rank: 2, type: 'mountain' },\n\t{ file: 'e', rank: 3 },\n\t{ file: 'e', rank: 4 },\n\t{ file: 'e', rank: 5 },\n\t{ file: 'e', rank: 6, type: 'mountain' },\n\t{ file: 'e', rank: 7 },\n\t{ file: 'e', rank: 8 },\n\t{ file: 'e', rank: 9 },\n\t{ file: 'f', rank: 2 },\n\t{ file: 'f', rank: 3 },\n\t{ file: 'f', rank: 4 },\n\t{ file: 'f', rank: 5 },\n\t{ file: 'f', rank: 6 },\n\t{ file: 'f', rank: 7 },\n\t{ file: 'f', rank: 8 },\n\t{ file: 'f', rank: 9 },\n\t{ file: 'g', rank: 3 },\n\t{ file: 'g', rank: 4 },\n\t{ file: 'g', rank: 5 },\n\t{ file: 'g', rank: 6 },\n\t{ file: 'g', rank: 7 },\n\t{ file: 'g', rank: 8 },\n\t{ file: 'g', rank: 9, type: 'sea' },\n\t{ file: 'h', rank: 4, type: 'sea' },\n\t{ file: 'h', rank: 5 },\n\t{ file: 'h', rank: 6 },\n\t{ file: 'h', rank: 7 },\n\t{ file: 'h', rank: 8 },\n\t{ file: 'h', rank: 9 },\n\t{ file: 'i', rank: 5 },\n\t{ file: 'i', rank: 6 },\n\t{ file: 'i', rank: 7, type: 'forest' },\n\t{ file: 'i', rank: 8 },\n\t{ file: 'i', rank: 9 },\n]\n\nconst FourPlayerBoard = () => (\n\t<Board\n\t\thexes={hexes}\n\t\tsize={5}\n\t\tstyle={{ height: '10rem' }}\n\t/>\n);\n\nexport default FourPlayerBoard;","import React from 'react'\n\nconst KnightAttackDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '10rem' }}\n\t\t  \tsrc='img/knight-attack-diagram.svg'\n\t\t  \talt='knight-attack-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default KnightAttackDiagram","import React from 'react'\n\nconst OrientationDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '12rem' }}\n\t\t  \tsrc='img/orientation-diagram.svg'\n\t\t  \talt='orientation-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default OrientationDiagram","import React from 'react'\n\nimport Svg from '.';\n\nconst defaultStyle = {\n\theight: '2rem',\n}\n\nconst DefaultSvg = ({ children }) => (\n\t<Svg\n\t  style={defaultStyle}\n\t  viewBox=\"0,0,2.2,2.2\"\n\t>\n\t  {children}\n\t</Svg>\n);\n\nexport default DefaultSvg;\n","import React from 'react'\n\nimport DefaultTriangle from '../Triangle/default';\nimport DefaultSvg from '../Svg/default';\n\nconst Archer = props => (\n  <DefaultSvg>\n    <DefaultTriangle {...props} />\n  </DefaultSvg>\n);\n\nexport default Archer;","import React from 'react'\n\nimport DefaultHex from '../Hex/default';\nimport DefaultSvg from '../Svg/default';\n\nconst SingleHex = ({ hexProps }) => (\n\t<DefaultSvg>\n\t  <DefaultHex {...hexProps} />\n\t </DefaultSvg>\n);\n\nexport default SingleHex;","import React from 'react'\n\nimport DefaultSquare from '../Square/default';\nimport DefaultSvg from '../Svg/default';\n\nconst SingleKnight = props => (\n\t<DefaultSvg>\n\t  <DefaultSquare {...props} />\n\t </DefaultSvg>\n);\n\nexport default SingleKnight;","import React from 'react'\n\nimport DefaultCircle from '../Circle/default';\nimport DefaultSvg from '../Svg/default';\n\nconst SingleSoldier = props => (\n\t<DefaultSvg>\n\t\t<DefaultCircle {...props} />\n\t</DefaultSvg>\n)\n\nexport default SingleSoldier;","import React from 'react'\n\nconst SoldierAttackDiagram = () => {\n\treturn (\n\t\t<div>\n\t\t  <img\n\t\t    style={{ height: '10rem' }}\n\t\t  \tsrc='img/soldier-attack-diagram.svg'\n\t\t  \talt='soldier-attack-diagram'\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default SoldierAttackDiagram","import React from 'react'\n\nimport ArcherArtilleryDiagram from './Archer/artillery-diagram'\nimport ArcherAttackDiagram from './Archer/attack-diagram'\nimport ArcherMovementDiagram from './Archer/movement-diagram'\nimport CastleExample from './Castle/example'\nimport DefaultBoard from './Board/default'\nimport FourPlayerBoard from './Board/four-player'\nimport KnightAttackDiagram from './Knight/attack-diagram'\nimport OrientationDiagram from './Orientation/diagram'\nimport SingleArcher from './Archer/single'\nimport SingleHex from './SingleHex'\nimport SingleKnight from './Knight/single'\nimport SingleSoldier from './Soldier/single'\nimport SoldierAttackDiagram from './Soldier/attack-diagram'\n\nexport default [{\n  title: 'Introduction',\n  text: 'Players take control of an army to battle against their opponents while maneuvering to control limited resources that can be used to grow their armies.',\n}, {\n  title: 'Object of the Game',\n  text: 'The game ends if any of the following conditions are met:',\n  bullets: [\n    'One player captures all opponent units',\n    'One player occupies all resource hexes',\n    'One player occupies all opponent buildings',\n    'All but one player forfeits',\n  ],\n}, {\n  title: 'Game Components',\n  bullets: [\n    '48 wooden land hexes',\n    '6 wooden sea hexes',\n    '5 wooden forest hexes',\n    '4 wooden mountain hexes',\n    '3 wooden village pieces of each color',\n    '2 wooden town pieces of each color',\n    '1 wooden castle pieces of each color',\n    '9 wooden soldier pieces of each color',\n    '6 wooden archer pieces of each color',\n    '3 wooden knight pieces of each color',\n    '12 small 1-silver tokens',\n    '12 medium 2-silver tokens',\n    '12 large 3-silver tokens',\n  ],\n}, {\n  title: 'Units',\n  bullets: [{\n    title: 'Orientation',\n    text: 'Each unit on the battleboard at all times has an orientation. This is the direction that unit is facing.',\n    bullets: [\n      'Visually, orientation is denoted by a small orientation triangle next to the unit symbol:',\n      <OrientationDiagram />,\n      'Textually, orientation is denoted by the \">\" character followed by the coordinates of the adjacent hex that unit is facing towards',\n      'For example, in the diagram above: Sb2>c2 (soldier at b2 facing c2)',\n    ],\n  }, {\n    title: 'Soldier',\n    bullets: [\n      <SingleSoldier />,\n      'Value: 1',\n      'Attack: Forward adjacent hex',\n      <SoldierAttackDiagram />,\n      'Defend: Forward (adjacent melee and ranged arrows)',\n      'Movement: Any direction up to 3 hexes',\n    ],\n  }, {\n    title: 'Archer',\n    bullets: [\n      <SingleArcher />,\n      'Value: 2',\n      'Attack: Forward up to 2 hex range (adjacent hex is range zero)',\n      <ArcherAttackDiagram />,\n      'Archers can attack opponent units behind other opponent units (if that is not oriented to protect itself with its shield)',\n      <ArcherArtilleryDiagram />,\n      'Defend: None. Archers do not carry a shield and are thus vulnerable to attack from any direction',\n      'Movement: Diagonally up to 2 hexes',\n      <ArcherMovementDiagram />,\n      'For example, an archer located at c3 has valid moves: a2, b1, b4, d2, d5, e4, e7, g5',\n      'Note that orientation does not affect valid moves',\n    ],\n  }, {\n    title: 'Knight',\n    bullets: [\n      <SingleKnight />,\n      'Value: 3',\n      'Attack: Adjacent forward-left, forward, forward-right',\n      <KnightAttackDiagram />,\n      'Defend: Forward-left, forward, forward-right',\n      'Movement: Forward up to 3 hexes',\n    ],\n  }],\n}, {\n  title: 'Buildings',\n  text: 'Buildings are visually represented in diagrams by a small symbol of the strongest unit that they produce, without an orientation.',\n  bullets: [\n    'For example in the following diagram is an archer unit and a castle:',\n    <CastleExample />,\n    {\n      title: 'Village',\n      bullets: [\n        'Value: 1',\n        'Produces soldiers'\n      ],\n    }, {\n      title: 'Town',\n      bullets: [\n        'Value: 2',\n        'Produces archers or soldiers',\n      ],\n    }, {\n      title: 'Castle',\n      bullets: [\n        'Value: 3',\n        'Produces knights, archers or soldiers',\n      ],\n    }\n  ],\n}, {\n  title: 'Hex Types',\n  bullets: [{\n    title: 'Land',\n    bullets: [\n      <SingleHex />,\n      'Default hex type',\n      'Eligible sites for building',\n    ],\n  }, {\n    title: 'Sea (resource)',\n    bullets: [\n      <SingleHex hexProps={{ fill: 'DeepSkyBlue' }} />,\n      'Provides access to fishing and trade',\n      'Produces 1 silver per resource action',\n    ],\n  }, {\n    title: 'Forrest (resource)',\n    bullets: [\n      <SingleHex hexProps={{ fill: 'ForestGreen' }} />,\n      'Provides access to hunting and lumber',\n      'Produces 2 silver per resource action',\n    ],\n  }, {\n    title: 'Mountain (resource)',\n    bullets: [\n      <SingleHex hexProps={{ fill: 'Sienna' }} />,\n      'Provides access to mining valuable minerals and ore',\n      'Produces 3 silver per resource action',\n    ],\n  }],\n}, {\n  title: 'Setup',\n  bullets: [{\n    title: 'Step 1: Build the board',\n    bullets: [\n      'For a 2 player game, a hexagon shaped board with a side dimension of 4 hexes. Randomly place 3 sea hexes, 2 forest hexes and 1 mountain hex.',\n      'Example:',\n      <DefaultBoard />,\n      'For a 3 or 4 player game, a hexagon shaped board with a side dimension of 5 hexes. Randomly place 4 sea hexes, 3 forest hexes and 2 mountain hexes.',\n      'Example:',\n      <FourPlayerBoard />,\n    ],\n  }, {\n    title: 'Step 2: Placement',\n    bullets: [\n      'In turn order each player places one building and one corresponding unit together per turn. Units correspond to buildings of equal value, ' +\n      'e.g. a Soldier & Village are placed together.',\n      'Players must choose hexes that satisfy the following requirements:',\n      '- must not be a resource hex',\n      '- must not be occupied by opponent',\n      '- unit orientation must not threaten or be threatened by any opponent unit',\n      'Players place the following:',\n      '3 Villages & 3 Soldiers',\n      '2 Towns & 2 Archers',\n      '1 Castle & 1 Knight',\n      {\n        title: 'Example',\n        bullets: [\n          'Player 1 places first Village & Soldier',\n          'Player 2 places first Village & Soldier',\n          'Player 1 places second Village & Soldier',\n          'Player 2 places second Village & Soldier',\n          'Player 1 places third Village & Soldier',\n          'Player 2 places third Village & Soldier',\n          'Player 1 places first Town & Archer',\n          'Player 2 places first Town & Archer',\n          'Player 1 places second Town & Archer',\n          'Player 2 places second Town & Archer',\n          'Player 1 places Castle & Knight',\n          'Player 2 places Castle & Knight',\n        ]\n      },\n    ],\n  }],\n}, {\n  title: 'Gameplay',\n  text: 'Each player performs one action in turn and play continues until an end condition is met.',\n}, {\n  title: 'Actions',\n  bullets: [\n    'Move',\n    'Attack',\n    'Earn',\n    'Purchase',\n  ],\n}, {\n  title: 'Movement',\n  bullets: [\n    'Players may move one of their units to a different hex and/or orientation, according to the units individual movement abilities',\n    'Units may not move to an occupied hex',\n    'Units may not move through opponent occupied hexes',\n    'Units may move through self occupied hexes',\n    'Units may occupy an opponent building if unoccupied (this also blocks opponent production at that building)',\n  ],\n}, {\n  title: 'Attack',\n  text: 'Players may attack an opponent unit with one of their own units.',\n  bullets: [\n    'Units inflict an amount of damage equal to their value. e.g. the soldier inflicts 1 point of damage and the knight inflicts 3',\n    'Units have a number of health points equal to their value',\n    'If a units health points are depleted to zero then that unit falls in battle and is removed from the board',\n    'Until a units health points are depleted to zero it may still move and attack normally',\n    'If a unit takes damage but is not at zero health points, mark the amount of health it has by placing a silver token next to it matching its current health value',\n    {\n      title: 'Shields',\n      text: 'Soldiers and knights are equipped with shields that can block attacks from certain directions. Players may not attack opponent units equipped with shields from these directions. They must maneuver to attack from the side or behind.',\n    }\n  ],\n}, {\n  title: 'Earn',\n  text: 'As an action, players may collect silver for all resource hexes they currently occupy. The amount of silver produced per hex is determined by the type:',\n  bullets: [\n    'Sea hexes produce 1 silver',\n    'Forrest hexes produce 2 silver',\n    'Mountain hexes produce 3 silver',\n  ],\n}, {\n  title: 'Purchase',\n  text: 'As an action, players may spend silver to purchase new units and immediately place them according to the following:',\n  bullets: [\n    'New units can only be placed in buildings of your own color',\n    'New units can only be placed in unoccupied buildings',\n    'Knights can only be placed in castles',\n    'Archers can be placed in castles or towns',\n    'Soldiers can be placed in any building type',\n    'There is no limit to how much silver can be spent, provided those units can be placed in eligible buildings',\n  ],\n}];\n\n","import React, { Component } from 'react';\n\nimport './app.css';\nimport Rule from './Rule';\nimport rules from './rules';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <h1>VigTavl ⚔ v3.0</h1>\n          <p>A turn-based strategy game of medieval combat.</p>\n          <p>Author: robcmills</p>\n          <p>2 to 4 players | 11+ | 45 - 60 minutes</p>\n        </div>\n        {this.renderRules()}\n      </div>\n    );\n  }\n\n  renderRules = () => {\n    return rules.map((rule, index) => <Rule {...rule} key={index} />);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}